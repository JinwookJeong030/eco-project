{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\components\\\\post\\\\Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport Quill from \"quill\";\nimport 'quill/dist/quill.bubble.css';\nimport styled from \"styled-components\";\nimport palette from \"../../lib/styles/palette\";\nimport Responsive from \"../common/ResponsiveHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditorBlock = styled(Responsive)`\n  /* 페이지 위아래 여백 지정 */\n  padding-top: 5rem;\n  padding-bottom: 5rem;\n`;\n_c = EditorBlock;\nconst TitleInput = styled.input`\n  outline: none;\n  border: none;\n  font-size: 3rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid ${palette.gray[4]};\n  margin-bottom: 2rem;\n  width: 100%;\n`;\n_c2 = TitleInput;\nconst QuillWrapper = styled.div`\n  /* 최소 크기 지정 및 padding 제거 */\n  .ql-editor {\n    padding: 0;\n    min-height: 320px;\n    font-size: 1.125rem;\n    line-height: 1.5;\n  }\n  .ql-editor.ql-blank::before {\n    left: 0px;\n  }\n`;\n_c3 = QuillWrapper;\nvar toolbarOptions = [['bold', 'italic', 'underline', 'strike'], // toggled buttons\n['blockquote', 'code-block'], [{\n  'header': 1\n}, {\n  'header': 2\n}], // custom button values\n[{\n  'list': 'ordered'\n}, {\n  'list': 'bullet'\n}], [{\n  'script': 'sub'\n}, {\n  'script': 'super'\n}], // superscript/subscript\n[{\n  'indent': '-1'\n}, {\n  'indent': '+1'\n}], // outdent/indent\n[{\n  'direction': 'rtl'\n}], // text direction\n[{\n  'size': ['small', false, 'large', 'huge']\n}], // custom dropdown\n[{\n  'header': [1, 2, 3, 4, 5, 6, false]\n}], [{\n  'color': []\n}, {\n  'background': []\n}], // dropdown with defaults from theme\n[{\n  'font': []\n}], [{\n  'align': []\n}], ['clean'] // remove formatting button\n];\n\nconst Editor = _ref => {\n  _s();\n\n  let {\n    onChangeField\n  } = _ref;\n  const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\n\n  const quillInstance = useRef(null); // Quill 인스턴스를 설정\n\n  useEffect(() => {\n    quillInstance.current = new Quill(quillElement.current, {\n      theme: 'bubble',\n      placeholder: '내용을 작성하세요...',\n      modules: {\n        toolbar: toolbarOptions\n      }\n    }); // quill에 text-change 이벤트 핸들러 등록\n    // 참고: https://quilljs.com/docs/api/#events\n\n    const quill = quillInstance.current;\n    quill.on('text-change', (delta, oldDelta, source) => {\n      if (source === 'user') {\n        onChangeField({\n          key: 'body',\n          value: quill.root.innerHTML\n        });\n      }\n    });\n  }, [onChangeField]);\n\n  const onChangeTitle = e => {\n    onChangeField({\n      key: 'title',\n      value: e.current.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(EditorBlock, {\n    children: [/*#__PURE__*/_jsxDEV(TitleInput, {\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      onChange: onChangeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuillWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: quillElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"6Cn/mTRP0NqVlGNpkx5D9B/BftI=\");\n\n_c4 = Editor;\nexport default Editor;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EditorBlock\");\n$RefreshReg$(_c2, \"TitleInput\");\n$RefreshReg$(_c3, \"QuillWrapper\");\n$RefreshReg$(_c4, \"Editor\");","map":{"version":3,"names":["React","useRef","useEffect","Quill","styled","palette","Responsive","EditorBlock","TitleInput","input","gray","QuillWrapper","div","toolbarOptions","Editor","onChangeField","quillElement","quillInstance","current","theme","placeholder","modules","toolbar","quill","on","delta","oldDelta","source","key","value","root","innerHTML","onChangeTitle","e"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/components/post/Editor.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport Quill from \"quill\";\r\nimport 'quill/dist/quill.bubble.css';\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Responsive from \"../common/ResponsiveHeader\";\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  /* 페이지 위아래 여백 지정 */\r\n  padding-top: 5rem;\r\n  padding-bottom: 5rem;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  outline: none;\r\n  border: none;\r\n  font-size: 3rem;\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 1px solid ${palette.gray[4]};\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  /* 최소 크기 지정 및 padding 제거 */\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 320px;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    left: 0px;\r\n  }\r\n`;\r\n\r\nvar toolbarOptions = [\r\n  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n  ['blockquote', 'code-block'],\r\n\r\n  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n  [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n  [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\r\n  [{ 'direction': 'rtl' }],                         // text direction\r\n\r\n  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n  [{ 'font': [] }],\r\n  [{ 'align': [] }],\r\n\r\n  ['clean']                                         // remove formatting button\r\n];\r\n\r\nconst Editor = ({ onChangeField }) => {\r\n  const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\r\n  const quillInstance =  useRef(null); // Quill 인스턴스를 설정\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'bubble',\r\n      placeholder: '내용을 작성하세요...',\r\n      modules: {\r\n        toolbar: toolbarOptions\r\n      },\r\n    });\r\n\r\n    // quill에 text-change 이벤트 핸들러 등록\r\n    // 참고: https://quilljs.com/docs/api/#events\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  const onChangeTitle = e => {\r\n    onChangeField({ key: 'title', value: e.current.value });\r\n  };\r\n\r\n  return (\r\n    <EditorBlock>\r\n      <TitleInput \r\n        placeholder=\"제목을 입력하세요.\" \r\n        onChange={onChangeTitle} \r\n      />\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;"],"mappings":"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"},"metadata":{},"sourceType":"module"}