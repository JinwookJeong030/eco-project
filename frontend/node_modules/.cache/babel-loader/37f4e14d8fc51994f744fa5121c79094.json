{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\containers\\\\post\\\\ReplyListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport qs from \"qs\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReplyList from \"../../components/post/ReplyList\";\nimport { changeField, listReplys, unloadReplys, writeReply } from \"../../modules/replys\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReplyListContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const {\n    user\n  } = useSelector(_ref => {\n    let {\n      user\n    } = _ref;\n    return {\n      user: user.user\n    };\n  });\n  const {\n    addReplyState,\n    reply_post,\n    reply_contents,\n    reply_order,\n    reply_type,\n    reply_group_id,\n    replys,\n    replysError,\n    loading\n  } = useSelector(_ref2 => {\n    let {\n      replys,\n      loading\n    } = _ref2;\n    return {\n      addReplyState: replys.addReplyState,\n      reply_post: id,\n      reply_contents: replys.reply_add_contents,\n      reply_type: 1,\n      reply_order: replys.reply_order,\n      reply_group_id: replys.addReplyState,\n      replys: replys.replys,\n      replysError: replys.replysError,\n      loading: loading['replys/LIST_REPLYS']\n    };\n  });\n\n  const onPublish = e => {\n    dispatch(writeReply({\n      reply_post,\n      reply_contents,\n      reply_type,\n      reply_order,\n      reply_group_id\n    }));\n  };\n\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [dispatch]);\n  useEffect(() => {\n    dispatch(listReplys(id));\n    let arrReplys = replys;\n\n    if (replys) {\n      if (arrReplys && !(arrReplys[arrReplys.length - 1].reply_type === 2)) {\n        arrReplys.push({\n          reply_id: 0,\n          reply_type: 2,\n          reply_group_id: arrReplys[arrReplys.length - 1].reply_group_id + 1\n        });\n      }\n    }\n\n    onChangeField({\n      key: 'replys',\n      value: arrReplys\n    }); // 언마운트될 때 리덕스에서 포스트 데이터 없애기\n\n    return () => {\n      dispatch(unloadReplys());\n    };\n  }, [dispatch, id, replys]);\n  return /*#__PURE__*/_jsxDEV(ReplyList, {\n    user: user,\n    loading: loading,\n    error: replysError,\n    addReplyState: addReplyState,\n    replys: replys,\n    onChangeField: onChangeField,\n    onPublish: onPublish\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReplyListContainer, \"f8ZZx8koB62aaazYpzn9N/GWjx4=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector];\n});\n\n_c = ReplyListContainer;\nexport default ReplyListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReplyListContainer\");","map":{"version":3,"names":["React","useEffect","useCallback","qs","useParams","useDispatch","useSelector","ReplyList","changeField","listReplys","unloadReplys","writeReply","ReplyListContainer","dispatch","id","user","addReplyState","reply_post","reply_contents","reply_order","reply_type","reply_group_id","replys","replysError","loading","reply_add_contents","onPublish","e","onChangeField","payload","arrReplys","length","push","reply_id","key","value"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/containers/post/ReplyListContainer.js"],"sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport qs from \"qs\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReplyList from \"../../components/post/ReplyList\";\r\nimport { changeField, listReplys, unloadReplys, writeReply } from \"../../modules/replys\";\r\n\r\nconst ReplyListContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  const {user}= useSelector(({user})=>({user: user.user}));\r\n  const {addReplyState, reply_post,reply_contents,reply_order,reply_type,reply_group_id,replys, replysError, loading } = useSelector(\r\n    ({ replys, loading }) => ({\r\n      addReplyState: replys.addReplyState,\r\n      reply_post: id,\r\n      reply_contents: replys.reply_add_contents,\r\n      reply_type: 1,\r\n      reply_order:replys.reply_order,\r\n      reply_group_id: replys.addReplyState,\r\n      replys: replys.replys,\r\n      replysError: replys.replysError,\r\n      loading: loading['replys/LIST_REPLYS'],\r\n    }),\r\n  );\r\n  \r\n  const onPublish = (e) => {\r\n    dispatch(writeReply({reply_post, reply_contents,reply_type,reply_order, reply_group_id}));\r\n   \r\n  };\r\n\r\n\r\n  const onChangeField = \r\n  useCallback(payload => dispatch(changeField(payload)), \r\n  [dispatch]);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listReplys(id));\r\n    let arrReplys = replys;\r\n  if(replys){\r\n    if(arrReplys&&!(arrReplys[arrReplys.length - 1].reply_type===2)){arrReplys.push({reply_id:0, reply_type: 2, \r\n      reply_group_id:arrReplys[arrReplys.length-1].reply_group_id+1});\r\n    }\r\n    \r\n}\r\nonChangeField({ key: 'replys', value: arrReplys  });\r\n\r\n    // 언마운트될 때 리덕스에서 포스트 데이터 없애기\r\n    return () => {\r\n      dispatch(unloadReplys());\r\n    };\r\n  }, [dispatch, id,replys]);\r\n  return (\r\n    <ReplyList\r\n      user={user}\r\n      loading={loading}\r\n      error={replysError}\r\n      addReplyState={addReplyState}\r\n      replys={replys}\r\n      onChangeField={onChangeField}\r\n      onPublish={onPublish}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReplyListContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}