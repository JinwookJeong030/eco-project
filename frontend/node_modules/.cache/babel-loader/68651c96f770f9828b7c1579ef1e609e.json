{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\components\\\\post\\\\TagBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../../lib/styles/palette\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagBoxBlock = styled.div`\n  width: 100%;\n  border-top: 1px solid ${palette.gray[2]};\n  padding-top: 2rem;\n\n  h4 {\n    color: ${palette.gray[8]};\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n  }\n`;\n_c = TagBoxBlock;\nconst TagForm = styled.form`\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  width: 256px;\n  border: 1px solid ${palette.gray[9]}; /* 스타일 초기화 */\n\n  input,\n  button {\n    outline: none;\n    border: none;\n    font-size: 1rem;\n  }\n\n  input {\n    padding: 0.5rem;\n    flex: 1;\n    min-width: 0;\n  }\n\n  button {\n    cursor: pointer;\n    padding-right: 1rem;\n    padding-left: 1rem;\n    border: none;\n    background: ${palette.gray[8]};\n    color: white;\n    font-weight: bold;\n    &:hover {\n      background: ${palette.gray[6]};\n    }\n  }\n`;\n_c2 = TagForm;\nconst Tag = styled.div`\n  margin-right: 0.5rem;\n  color: ${palette.gray[6]};\n  cursor: pointer;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n_c3 = Tag;\nconst TagListBlock = styled.div`\n  display: flex;\n  margin-top: 0.5rem;\n`; // React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\n\n_c4 = TagListBlock;\nconst TagItem = /*#__PURE__*/React.memo(_c5 = _ref => {\n  let {\n    tag,\n    onRemove\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Tag, {\n    onClick: () => onRemove(tag),\n    children: [\"#\", tag]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n}); // React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\n\n_c6 = TagItem;\nconst TagList = /*#__PURE__*/React.memo(_c7 = _ref2 => {\n  let {\n    tags,\n    onRemove\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(TagListBlock, {\n    children: tags.map(tag => /*#__PURE__*/_jsxDEV(TagItem, {\n      tag: tag,\n      onRemove: onRemove\n    }, tag, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n});\n_c8 = TagList;\n\nconst TagBox = () => {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [localTags, setLocalTags] = useState([]);\n  const insertTag = useCallback(tag => {\n    if (!tag) return; // 공백이라면 추가하지 않음\n\n    if (localTags.includes(tag)) return; // 이미 존재한다면 추가하지 않음\n\n    setLocalTags([...localTags, tag]);\n  }, [localTags]);\n  const onRemove = useCallback(tag => {\n    setLocalTags(localTags.filter(t => t !== tag));\n  }, [localTags]);\n  const onChange = useCallback(e => {\n    setInput(e.target.value);\n  }, []);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n    insertTag(input.trim()); // 앞뒤 공백을 없앤 후 등록\n\n    setInput(''); // input 초기화\n  }, [input, insertTag]);\n  return /*#__PURE__*/_jsxDEV(TagBoxBlock, {\n    children: [/*#__PURE__*/_jsxDEV(TagForm, {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uCE74\\uD14C\\uACE0\\uB9AC\",\n        value: input,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagList, {\n      tags: localTags,\n      onRemove: onRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagBox, \"TpctF9QRRXOqcJJUe8YAxmyXnks=\");\n\n_c9 = TagBox;\nexport default TagBox;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"TagBoxBlock\");\n$RefreshReg$(_c2, \"TagForm\");\n$RefreshReg$(_c3, \"Tag\");\n$RefreshReg$(_c4, \"TagListBlock\");\n$RefreshReg$(_c5, \"TagItem$React.memo\");\n$RefreshReg$(_c6, \"TagItem\");\n$RefreshReg$(_c7, \"TagList$React.memo\");\n$RefreshReg$(_c8, \"TagList\");\n$RefreshReg$(_c9, \"TagBox\");","map":{"version":3,"names":["React","useState","useCallback","styled","palette","TagBoxBlock","div","gray","TagForm","form","Tag","TagListBlock","TagItem","memo","tag","onRemove","TagList","tags","map","TagBox","input","setInput","localTags","setLocalTags","insertTag","includes","filter","t","onChange","e","target","value","onSubmit","preventDefault","trim"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/components/post/TagBox.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst TagBoxBlock = styled.div`\r\n  width: 100%;\r\n  border-top: 1px solid ${palette.gray[2]};\r\n  padding-top: 2rem;\r\n\r\n  h4 {\r\n    color: ${palette.gray[8]};\r\n    margin-top: 0;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  width: 256px;\r\n  border: 1px solid ${palette.gray[9]}; /* 스타일 초기화 */\r\n\r\n  input,\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    flex: 1;\r\n    min-width: 0;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n    border: none;\r\n    background: ${palette.gray[8]};\r\n    color: white;\r\n    font-weight: bold;\r\n    &:hover {\r\n      background: ${palette.gray[6]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  margin-right: 0.5rem;\r\n  color: ${palette.gray[6]};\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst TagListBlock = styled.div`\r\n  display: flex;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\n// React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n  <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>\r\n));\r\n\r\n// React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagList = React.memo(({ tags, onRemove }) => (\r\n  <TagListBlock>\r\n    {tags.map((tag) => (\r\n      <TagItem key={tag} tag={tag} onRemove={onRemove} />\r\n    ))}\r\n  </TagListBlock>\r\n));\r\n\r\nconst TagBox = () => {\r\n  const [input, setInput] = useState('');\r\n  const [localTags, setLocalTags] = useState([]);\r\n\r\n  const insertTag = useCallback(\r\n    tag => {\r\n      if (!tag) return; // 공백이라면 추가하지 않음\r\n      if (localTags.includes(tag)) return; // 이미 존재한다면 추가하지 않음\r\n      setLocalTags([...localTags, tag]);\r\n    },\r\n    [localTags],\r\n  );\r\n\r\n  const onRemove = useCallback(\r\n    tag => {\r\n      setLocalTags(localTags.filter(t => t !== tag));\r\n    },\r\n    [localTags],\r\n  );\r\n\r\n  const onChange = useCallback(e => {\r\n    setInput(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      insertTag(input.trim()); // 앞뒤 공백을 없앤 후 등록\r\n      setInput(''); // input 초기화\r\n    },\r\n    [input, insertTag],\r\n  );\r\n\r\n  return (\r\n    <TagBoxBlock>\r\n\r\n      <TagForm onSubmit={onSubmit}>\r\n        <input \r\n          placeholder=\"카테고리\" \r\n          value={input} \r\n          onChange={onChange}\r\n        />\r\n      \r\n      </TagForm>\r\n      <TagList tags={localTags} onRemove={onRemove} />\r\n    </TagBoxBlock>\r\n  );\r\n};\r\n\r\nexport default TagBox;"],"mappings":"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"},"metadata":{},"sourceType":"module"}