{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport createRequestSaga, { createRequestActionTypes } from \"../lib/createRequestSaga\";\nimport * as postsAPI from '../lib/api/post';\nimport { takeLatest } from 'redux-saga/effects';\nconst CHANGE_FIELD = 'write/CHANGE_FIELD'; // 특정 key 값 바꾸기\n\nconst [LIST_POSTS, LIST_POSTS_SUCCESS, LIST_POSTS_FAILURE] = createRequestActionTypes('posts/LIST_POSTS');\nconst [SEARCH_POSTS, SEARCH_POSTS_SUCCESS, SEARCH_POSTS_FAILURE] = createRequestActionTypes('posts/SEARCH_POSTS');\nexport const changeField = createAction(CHANGE_FIELD, _ref => {\n  let {\n    key,\n    value\n  } = _ref;\n  return {\n    key,\n    value\n  };\n});\nexport const listPosts = createAction(LIST_POSTS, _ref2 => {\n  let {\n    page\n  } = _ref2;\n  return {\n    page\n  };\n});\nexport const searchPosts = createAction(SEARCH_POSTS, _ref3 => {\n  let {\n    search_type,\n    search_contents,\n    page\n  } = _ref3;\n  return {\n    search_type,\n    search_contents,\n    page\n  };\n});\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\nexport function* postsSaga() {\n  yield takeLatest(LIST_POSTS, listPostsSaga);\n}\nconst initialState = {\n  search_type: null,\n  search_contents: null,\n  posts: null,\n  error: null\n};\nconst posts = handleActions({\n  [CHANGE_FIELD]: (state, _ref4) => {\n    let {\n      payload: {\n        key,\n        value\n      }\n    } = _ref4;\n    return { ...state,\n      [key]: value // 특정 key 값을 업데이트\n\n    };\n  },\n  [LIST_POSTS_SUCCESS]: (state, _ref5) => {\n    let {\n      payload: posts\n    } = _ref5;\n    return { ...state,\n      posts: posts.result.posts\n    };\n  },\n  [LIST_POSTS_FAILURE]: (state, _ref6) => {\n    let {\n      payload: error\n    } = _ref6;\n    return { ...state,\n      error\n    };\n  },\n  [SEARCH_POSTS_SUCCESS]: (state, _ref7) => {\n    let {\n      payload: posts\n    } = _ref7;\n    return { ...state,\n      posts: posts.result.posts\n    };\n  },\n  [SEARCH_POSTS_FAILURE]: (state, _ref8) => {\n    let {\n      payload: error\n    } = _ref8;\n    return { ...state,\n      error\n    };\n  }\n}, initialState);\nexport default posts;","map":{"version":3,"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","postsAPI","takeLatest","CHANGE_FIELD","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","SEARCH_POSTS","SEARCH_POSTS_SUCCESS","SEARCH_POSTS_FAILURE","changeField","key","value","listPosts","page","searchPosts","search_type","search_contents","listPostsSaga","postsSaga","initialState","posts","error","state","payload","result"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/modules/posts.js"],"sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from \"../lib/createRequestSaga\";\r\nimport * as postsAPI from '../lib/api/post';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n\r\nconst CHANGE_FIELD = 'write/CHANGE_FIELD'; // 특정 key 값 바꾸기\r\n\r\nconst [\r\n  LIST_POSTS,\r\n  LIST_POSTS_SUCCESS,\r\n  LIST_POSTS_FAILURE,\r\n] = createRequestActionTypes('posts/LIST_POSTS');\r\n\r\n\r\n\r\nconst [SEARCH_POSTS,\r\n  SEARCH_POSTS_SUCCESS,\r\n  SEARCH_POSTS_FAILURE,\r\n] = createRequestActionTypes('posts/SEARCH_POSTS');\r\n\r\n\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\n\r\nexport const listPosts = createAction(\r\n  LIST_POSTS,\r\n  ({ page }) => ({ page }),\r\n);\r\n\r\nexport const searchPosts = createAction(\r\n  SEARCH_POSTS,\r\n  ({  search_type, search_contents, page }) => ({search_type, search_contents, page }),\r\n);\r\n\r\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\r\nexport function* postsSaga() {\r\n  yield takeLatest(LIST_POSTS, listPostsSaga);\r\n}\r\n\r\n\r\n\r\nconst initialState = {\r\n  search_type:null,\r\n  search_contents: null,\r\n  posts: null,\r\n  error: null,\r\n};\r\n\r\nconst posts = handleActions(\r\n  {\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 key 값을 업데이트\r\n    }),\r\n    [LIST_POSTS_SUCCESS]: (state, { payload: posts }) => ({\r\n      ...state,\r\n      posts: posts.result.posts,\r\n    }),\r\n    [LIST_POSTS_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [SEARCH_POSTS_SUCCESS]: (state, { payload: posts }) => ({\r\n      ...state,\r\n      posts: posts.result.posts,\r\n    }),\r\n    [SEARCH_POSTS_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default posts;"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,QAAZ,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAGA,MAAMC,YAAY,GAAG,oBAArB,C,CAA2C;;AAE3C,MAAM,CACJC,UADI,EAEJC,kBAFI,EAGJC,kBAHI,IAIFN,wBAAwB,CAAC,kBAAD,CAJ5B;AAQA,MAAM,CAACO,YAAD,EACJC,oBADI,EAEJC,oBAFI,IAGFT,wBAAwB,CAAC,oBAAD,CAH5B;AAMA,OAAO,MAAMU,WAAW,GAAGb,YAAY,CAACM,YAAD,EAAe;EAAA,IAAC;IAAEQ,GAAF;IAAOC;EAAP,CAAD;EAAA,OAAqB;IACzED,GADyE;IAEzEC;EAFyE,CAArB;AAAA,CAAf,CAAhC;AAKP,OAAO,MAAMC,SAAS,GAAGhB,YAAY,CACnCO,UADmC,EAEnC;EAAA,IAAC;IAAEU;EAAF,CAAD;EAAA,OAAe;IAAEA;EAAF,CAAf;AAAA,CAFmC,CAA9B;AAKP,OAAO,MAAMC,WAAW,GAAGlB,YAAY,CACrCU,YADqC,EAErC;EAAA,IAAC;IAAGS,WAAH;IAAgBC,eAAhB;IAAiCH;EAAjC,CAAD;EAAA,OAA8C;IAACE,WAAD;IAAcC,eAAd;IAA+BH;EAA/B,CAA9C;AAAA,CAFqC,CAAhC;AAKP,MAAMI,aAAa,GAAGnB,iBAAiB,CAACK,UAAD,EAAaH,QAAQ,CAACY,SAAtB,CAAvC;AACA,OAAO,UAAUM,SAAV,GAAsB;EAC3B,MAAMjB,UAAU,CAACE,UAAD,EAAac,aAAb,CAAhB;AACD;AAID,MAAME,YAAY,GAAG;EACnBJ,WAAW,EAAC,IADO;EAEnBC,eAAe,EAAE,IAFE;EAGnBI,KAAK,EAAE,IAHY;EAInBC,KAAK,EAAE;AAJY,CAArB;AAOA,MAAMD,KAAK,GAAGvB,aAAa,CACzB;EACE,CAACK,YAAD,GAAgB,CAACoB,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAE;QAAEb,GAAF;QAAOC;MAAP;IAAX,CAAR;IAAA,OAAyC,EACvD,GAAGW,KADoD;MAEvD,CAACZ,GAAD,GAAOC,KAFgD,CAEzC;;IAFyC,CAAzC;EAAA,CADlB;EAKE,CAACP,kBAAD,GAAsB,CAACkB,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEH;IAAX,CAAR;IAAA,OAAgC,EACpD,GAAGE,KADiD;MAEpDF,KAAK,EAAEA,KAAK,CAACI,MAAN,CAAaJ;IAFgC,CAAhC;EAAA,CALxB;EASE,CAACf,kBAAD,GAAsB,CAACiB,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEF;IAAX,CAAR;IAAA,OAAgC,EACpD,GAAGC,KADiD;MAEpDD;IAFoD,CAAhC;EAAA,CATxB;EAaE,CAACd,oBAAD,GAAwB,CAACe,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEH;IAAX,CAAR;IAAA,OAAgC,EACtD,GAAGE,KADmD;MAEtDF,KAAK,EAAEA,KAAK,CAACI,MAAN,CAAaJ;IAFkC,CAAhC;EAAA,CAb1B;EAiBE,CAACZ,oBAAD,GAAwB,CAACc,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEF;IAAX,CAAR;IAAA,OAAgC,EACtD,GAAGC,KADmD;MAEtDD;IAFsD,CAAhC;EAAA;AAjB1B,CADyB,EAuBzBF,YAvByB,CAA3B;AA0BA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}