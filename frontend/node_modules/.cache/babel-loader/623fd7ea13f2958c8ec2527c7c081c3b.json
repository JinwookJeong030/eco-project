{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport auth, { authSaga } from './auth';\nimport user, { userSaga } from './user';\nimport write from './write';\nimport post, { postSaga } from './post';\nimport loading from './loading';\nconst rootReducer = combineReducers({\n  loading,\n  auth,\n  user,\n  write,\n  post\n});\nexport function* rootSaga() {\n  yield all([authSaga(), userSaga(), writeSaga(), postSaga()]);\n}\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","all","auth","authSaga","user","userSaga","write","post","postSaga","loading","rootReducer","rootSaga","writeSaga"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/modules/index.js"],"sourcesContent":["import { combineReducers } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport auth, { authSaga } from './auth';\r\nimport user, { userSaga } from './user';\r\nimport write from './write';\r\nimport post,{postSaga} from './post';\r\nimport loading from './loading';\r\n\r\nconst rootReducer = combineReducers({\r\n  loading,\r\n  auth,\r\n  user,\r\n  write,\r\n  post\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), writeSaga(), postSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,IAAP,IAAeC,QAAf,QAA+B,QAA/B;AACA,OAAOC,IAAP,IAAeC,QAAf,QAA+B,QAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,IAAaC,QAAb,QAA4B,QAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,WAAW,GAAGV,eAAe,CAAC;EAClCS,OADkC;EAElCP,IAFkC;EAGlCE,IAHkC;EAIlCE,KAJkC;EAKlCC;AALkC,CAAD,CAAnC;AAQA,OAAO,UAAUI,QAAV,GAAqB;EAC1B,MAAMV,GAAG,CAAC,CAACE,QAAQ,EAAT,EAAaE,QAAQ,EAArB,EAAyBO,SAAS,EAAlC,EAAsCJ,QAAQ,EAA9C,CAAD,CAAT;AACD;AAED,eAAeE,WAAf"},"metadata":{},"sourceType":"module"}