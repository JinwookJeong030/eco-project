{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\components\\\\post\\\\Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, memo } from 'react';\nimport { useNavigator, useParams } from 'react-router-dom';\nimport styles from './postEditor.module.css';\nimport QuillEditor from '../../components/QuillEditor/quillEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    api,\n    user\n  } = _ref;\n  const navigator = useNavigator();\n  const [htmlContent, setHtmlContent] = useState(\"\");\n  const {\n    id: postId\n  } = useParams();\n  const quillRef = useRef();\n\n  const handleSubmit = async () => {\n    const description = quillRef.current.getEditor().getText(); //태그를 제외한 순수 text만을 받아온다. 검색기능을 구현하지 않을 거라면 굳이 text만 따로 저장할 필요는 없다.\n\n    if (description.trim() === \"\") {\n      alert(\"내용을 입력해주세요.\");\n      return;\n    }\n\n    if (postId) {\n      //기존 게시글 업데이트\n      await api.updatePost({\n        postId,\n        description,\n        htmlContent\n      }); //history.push(`/@${user.name}/post/${postId}`);\n    } else {\n      //새로운 게시글 생성\n      await api.createNewPost({\n        description,\n        htmlContent\n      }); //history.push(`/@${user.name}/posts?folder=${selectedFolder}`);\n    }\n  };\n\n  useEffect(() => {\n    if (!postId) {\n      return;\n    }\n\n    const fetchData = async () => {\n      const {\n        htmlContent: prevHtml\n      } = await api.fetchPostDetail(postId);\n      setHtmlContent(prevHtml);\n    };\n\n    fetchData();\n  }, [postId, api]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QuillEditor, {\n      quillRef: quillRef,\n      htmlContent: htmlContent,\n      setHtmlContent: setHtmlContent,\n      api: api\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.submit,\n      onClick: handleSubmit,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}, \"1/1/6eygBV9jofaQAgrxrGnUHWs=\", false, function () {\n  return [useNavigator, useParams];\n})), \"1/1/6eygBV9jofaQAgrxrGnUHWs=\", false, function () {\n  return [useNavigator, useParams];\n});\n\n_c2 = Editor;\nexport default Editor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Editor$memo\");\n$RefreshReg$(_c2, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","memo","useNavigator","useParams","styles","QuillEditor","Editor","api","user","navigator","htmlContent","setHtmlContent","id","postId","quillRef","handleSubmit","description","current","getEditor","getText","trim","alert","updatePost","createNewPost","fetchData","prevHtml","fetchPostDetail","submit"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/components/post/Editor.js"],"sourcesContent":["import React, { useEffect, useRef, useState, memo } from 'react'\r\nimport { useNavigator, useParams } from 'react-router-dom';\r\nimport styles from './postEditor.module.css';\r\nimport QuillEditor from '../../components/QuillEditor/quillEditor';\r\n\r\nconst Editor = memo(({ api, user }) => {\r\n    const navigator = useNavigator();\r\n    const [htmlContent, setHtmlContent] = useState(\"\"); \r\n    const { id: postId } = useParams();\r\n    const quillRef = useRef(); \r\n\r\n    const handleSubmit = async () => {\r\n        const description = quillRef.current.getEditor().getText(); //태그를 제외한 순수 text만을 받아온다. 검색기능을 구현하지 않을 거라면 굳이 text만 따로 저장할 필요는 없다.\r\n        if (description.trim()===\"\") {\r\n            alert(\"내용을 입력해주세요.\")\r\n            return;\r\n        }\r\n        if (postId) {\r\n            //기존 게시글 업데이트\r\n            await api.updatePost({postId,description,htmlContent});\r\n            //history.push(`/@${user.name}/post/${postId}`);\r\n        } else {\r\n            //새로운 게시글 생성\r\n            await api.createNewPost({description,htmlContent});\r\n            //history.push(`/@${user.name}/posts?folder=${selectedFolder}`);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(!postId){\r\n            return;\r\n        }\r\n        const fetchData = async () => {\r\n            const { htmlContent: prevHtml } = await api.fetchPostDetail(postId);\r\n            setHtmlContent(prevHtml);\r\n        };\r\n        fetchData();\r\n    }, [postId, api])\r\n\r\n    return (\r\n        <div>\r\n   \r\n            <QuillEditor quillRef={quillRef} htmlContent={htmlContent} setHtmlContent={setHtmlContent} api={api} />\r\n            <button className={styles.submit} onClick={handleSubmit}>Done</button>\r\n        </div>\r\n    )\r\n})\r\nexport default Editor;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,IAA7C,QAAyD,OAAzD;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,kBAAxC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;;;AAEA,MAAMC,MAAM,iCAAGL,IAAI,SAAC,QAAmB;EAAA;;EAAA,IAAlB;IAAEM,GAAF;IAAOC;EAAP,CAAkB;EACnC,MAAMC,SAAS,GAAGP,YAAY,EAA9B;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM;IAAEY,EAAE,EAAEC;EAAN,IAAiBV,SAAS,EAAhC;EACA,MAAMW,QAAQ,GAAGf,MAAM,EAAvB;;EAEA,MAAMgB,YAAY,GAAG,YAAY;IAC7B,MAAMC,WAAW,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,SAAjB,GAA6BC,OAA7B,EAApB,CAD6B,CAC+B;;IAC5D,IAAIH,WAAW,CAACI,IAAZ,OAAqB,EAAzB,EAA6B;MACzBC,KAAK,CAAC,aAAD,CAAL;MACA;IACH;;IACD,IAAIR,MAAJ,EAAY;MACR;MACA,MAAMN,GAAG,CAACe,UAAJ,CAAe;QAACT,MAAD;QAAQG,WAAR;QAAoBN;MAApB,CAAf,CAAN,CAFQ,CAGR;IACH,CAJD,MAIO;MACH;MACA,MAAMH,GAAG,CAACgB,aAAJ,CAAkB;QAACP,WAAD;QAAaN;MAAb,CAAlB,CAAN,CAFG,CAGH;IACH;EACJ,CAfD;;EAgBAZ,SAAS,CAAC,MAAM;IACZ,IAAG,CAACe,MAAJ,EAAW;MACP;IACH;;IACD,MAAMW,SAAS,GAAG,YAAY;MAC1B,MAAM;QAAEd,WAAW,EAAEe;MAAf,IAA4B,MAAMlB,GAAG,CAACmB,eAAJ,CAAoBb,MAApB,CAAxC;MACAF,cAAc,CAACc,QAAD,CAAd;IACH,CAHD;;IAIAD,SAAS;EACZ,CATQ,EASN,CAACX,MAAD,EAASN,GAAT,CATM,CAAT;EAWA,oBACI;IAAA,wBAEI,QAAC,WAAD;MAAa,QAAQ,EAAEO,QAAvB;MAAiC,WAAW,EAAEJ,WAA9C;MAA2D,cAAc,EAAEC,cAA3E;MAA2F,GAAG,EAAEJ;IAAhG;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,SAAS,EAAEH,MAAM,CAACuB,MAA1B;MAAkC,OAAO,EAAEZ,YAA3C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAxCkB;EAAA,QACGb,YADH,EAGQC,SAHR;AAAA,GAAP;EAAA,QACUD,YADV,EAGeC,SAHf;AAAA,EAAZ;;MAAMG,M;AAyCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}