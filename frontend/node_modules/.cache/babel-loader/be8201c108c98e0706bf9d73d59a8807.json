{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\containers\\\\post\\\\ReplyListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport qs from \"qs\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReplyList from \"../../components/post/ReplyList\";\nimport { changeField, listReplys, unloadReplys, writeReply } from \"../../modules/replys\";\nimport { useNavigate } from \"../../../node_modules/react-router-dom/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReplyListContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const {\n    user\n  } = useSelector(_ref => {\n    let {\n      user\n    } = _ref;\n    return {\n      user: user.user\n    };\n  });\n  const {\n    addIndex,\n    addReplyState,\n    reply_post,\n    reply_contents,\n    reply_type,\n    reply_group_id,\n    replys,\n    replysError,\n    loading\n  } = useSelector(_ref2 => {\n    let {\n      replys,\n      loading\n    } = _ref2;\n    return {\n      addIndex: replys.addIndex,\n      addReplyState: replys.addReplyState,\n      reply_post: id,\n      reply_contents: replys.reply_add_contents,\n      reply_type: 1,\n      reply_group_id: replys.addReplyState,\n      replys: replys.replys,\n      replysError: replys.replysError,\n      loading: loading['replys/LIST_REPLYS']\n    };\n  });\n\n  const onPublish = e => {\n    e.preventDefault();\n    dispatch(writeReply({\n      reply_post,\n      reply_contents,\n      reply_type,\n      reply_group_id\n    }));\n  };\n\n  const onRemove = () => {};\n\n  const onRemoveSuccess = () => {\n    navigate(0);\n    dispatch(changeField({\n      key: 'addReplyState',\n      value: null\n    }));\n  };\n\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [dispatch]);\n  useEffect(() => {\n    dispatch(listReplys(id)); // 언마운트될 때 리덕스에서 reply 데이터 없애기\n\n    return () => {\n      dispatch(unloadReplys());\n    };\n  }, [dispatch, id]);\n  return /*#__PURE__*/_jsxDEV(ReplyList, {\n    user: user,\n    loading: loading,\n    error: replysError,\n    addIndex: addIndex,\n    addReplyState: addReplyState,\n    replys: replys,\n    onChangeField: onChangeField,\n    onPublish: onPublish,\n    onRemove: onRemove,\n    onRemoveSuccess: onRemoveSuccess\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReplyListContainer, \"gPuT1DTBL3rSiZvgS5Bb2ITdTwM=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector, useSelector];\n});\n\n_c = ReplyListContainer;\nexport default ReplyListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReplyListContainer\");","map":{"version":3,"names":["React","useEffect","useCallback","qs","useParams","useDispatch","useSelector","ReplyList","changeField","listReplys","unloadReplys","writeReply","useNavigate","ReplyListContainer","dispatch","navigate","id","user","addIndex","addReplyState","reply_post","reply_contents","reply_type","reply_group_id","replys","replysError","loading","reply_add_contents","onPublish","e","preventDefault","onRemove","onRemoveSuccess","key","value","onChangeField","payload"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/containers/post/ReplyListContainer.js"],"sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport qs from \"qs\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReplyList from \"../../components/post/ReplyList\";\r\nimport { changeField, listReplys, unloadReplys, writeReply } from \"../../modules/replys\";\r\nimport { useNavigate } from \"../../../node_modules/react-router-dom/index\";\r\n\r\nconst ReplyListContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const {user}= useSelector(({user})=>({user: user.user}));\r\n  const {addIndex,addReplyState, reply_post,reply_contents,reply_type,reply_group_id,replys, replysError, loading } = useSelector(\r\n    ({ replys, loading }) => ({\r\n      addIndex: replys.addIndex,\r\n      addReplyState: replys.addReplyState,\r\n      reply_post: id,\r\n      reply_contents: replys.reply_add_contents,\r\n      reply_type: 1,\r\n      reply_group_id: replys.addReplyState,\r\n      replys: replys.replys,\r\n      replysError: replys.replysError,\r\n      loading: loading['replys/LIST_REPLYS'],\r\n    }),\r\n  );\r\n  \r\n  const onPublish = (e) => {\r\n    e.preventDefault();\r\n    dispatch(writeReply({reply_post, reply_contents,reply_type, reply_group_id}));\r\n   \r\n  };\r\n\r\n  const onRemove =()=>{\r\n    \r\n  }\r\n  const onRemoveSuccess=()=>{\r\n    navigate(0);\r\n    dispatch(changeField({ key: 'addReplyState', value: null  }));\r\n    \r\n  }\r\n\r\n  const onChangeField = \r\n  useCallback(payload => dispatch(changeField(payload)), \r\n  [dispatch]);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listReplys(id));\r\n\r\n    // 언마운트될 때 리덕스에서 reply 데이터 없애기\r\n    return () => {\r\n      dispatch(unloadReplys());\r\n    };\r\n  }, [dispatch, id,]);\r\n  return (\r\n    <ReplyList\r\n      user={user}\r\n      loading={loading}\r\n      error={replysError}\r\n      addIndex={addIndex}\r\n      addReplyState={addReplyState}\r\n      replys={replys}\r\n      onChangeField={onChangeField}\r\n      onPublish={onPublish}\r\n      onRemove ={onRemove}\r\n      onRemoveSuccess= {onRemoveSuccess}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReplyListContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}