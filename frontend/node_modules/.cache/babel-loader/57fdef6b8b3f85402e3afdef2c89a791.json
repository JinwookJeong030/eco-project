{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\containers\\\\post\\\\PostManagementContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport post, { readPost, unloadPost } from \"../../modules/post\";\nimport PostViewer from \"../../components/post/PostViewer\";\nimport PostManagement from \"../../components/post/PostManagement\";\nimport { deletePost, setOriginalPost } from \"../../modules/write\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostManagementContainer = () => {\n  _s();\n\n  const navigate = useNavigate(); // 처음 마운트될 때 포스트 읽기 API 요청\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    post,\n    error,\n    loadingRead,\n    loadingDelete,\n    user\n  } = useSelector(_ref => {\n    let {\n      post,\n      loading,\n      user\n    } = _ref;\n    return {\n      post: post.post,\n      error: post.error,\n      loadingRead: loading['post/READ_POST_SUCCESS'],\n      loadingDelete: loading['post/DELETE_POST_SUCCESS'],\n      user: user.user\n    };\n  });\n\n  const onEdit = () => {\n    dispatch(setOriginalPost(post));\n    navigate('/post/edit');\n  };\n\n  const onRemove = () => {\n    dispatch(deletePost(id));\n  };\n\n  const onRemoveSuccess = () => {\n    navigate('/post/list');\n  };\n\n  const onBack = e => {\n    e.preventDefault();\n    navigate(-1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostManagement, {\n    user: user,\n    post: post,\n    loadingRead: loadingRead,\n    loadingDelete: loadingDelete,\n    id: id,\n    onEdit: onEdit,\n    onRemove: onRemove,\n    onRemoveSuccess: onRemoveSuccess,\n    onBack: onBack\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PostManagementContainer, \"utzk4/tc9HmV9bYpfubnN7RQNTU=\", false, function () {\n  return [useNavigate, useParams, useDispatch, useSelector];\n});\n\n_c = PostManagementContainer;\nexport default PostManagementContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostManagementContainer\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useParams","useLocation","useNavigate","post","readPost","unloadPost","PostViewer","PostManagement","deletePost","setOriginalPost","PostManagementContainer","navigate","id","dispatch","error","loadingRead","loadingDelete","user","loading","onEdit","onRemove","onRemoveSuccess","onBack","e","preventDefault"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/containers/post/PostManagementContainer.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useLocation, useNavigate  } from \"react-router-dom\";\r\nimport post, { readPost, unloadPost } from \"../../modules/post\";\r\nimport PostViewer from \"../../components/post/PostViewer\";\r\nimport PostManagement from \"../../components/post/PostManagement\";\r\nimport { deletePost, setOriginalPost } from \"../../modules/write\";\r\nconst PostManagementContainer = () => {\r\n\r\n  const navigate = useNavigate();\r\n  // 처음 마운트될 때 포스트 읽기 API 요청\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const { post, error, loadingRead,loadingDelete, user } = useSelector(\r\n    ({ post, loading, user }) => ({\r\n      post:post.post,\r\n      error: post.error,\r\n      loadingRead: loading['post/READ_POST_SUCCESS'],\r\n      loadingDelete: loading['post/DELETE_POST_SUCCESS'],\r\n      user: user.user,\r\n    }),\r\n  );\r\n\r\n\r\n  const onEdit =()=>{\r\n    dispatch(setOriginalPost(post));\r\n    navigate('/post/edit');\r\n  }\r\n  const onRemove =()=>{\r\n    dispatch(deletePost(id));\r\n  }\r\n  const onRemoveSuccess=()=>{\r\n    navigate('/post/list');\r\n  }\r\n  const onBack=(e)=>{\r\n    e.preventDefault();\r\n    navigate(-1);\r\n  }\r\n\r\n  return <PostManagement user={user} post={post} loadingRead={loadingRead} loadingDelete={loadingDelete} id={id} onEdit={onEdit} onRemove={onRemove}\r\n  onRemoveSuccess={onRemoveSuccess} onBack ={onBack} />;\r\n};\r\n\r\nexport default PostManagementContainer;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAqD,kBAArD;AACA,OAAOC,IAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,qBAA5C;;;AACA,MAAMC,uBAAuB,GAAG,MAAM;EAAA;;EAEpC,MAAMC,QAAQ,GAAGT,WAAW,EAA5B,CAFoC,CAGpC;;EACA,MAAM;IAAEU;EAAF,IAASZ,SAAS,EAAxB;EACA,MAAMa,QAAQ,GAAGf,WAAW,EAA5B;EAGA,MAAM;IAAEK,IAAF;IAAQW,KAAR;IAAeC,WAAf;IAA2BC,aAA3B;IAA0CC;EAA1C,IAAmDlB,WAAW,CAClE;IAAA,IAAC;MAAEI,IAAF;MAAQe,OAAR;MAAiBD;IAAjB,CAAD;IAAA,OAA8B;MAC5Bd,IAAI,EAACA,IAAI,CAACA,IADkB;MAE5BW,KAAK,EAAEX,IAAI,CAACW,KAFgB;MAG5BC,WAAW,EAAEG,OAAO,CAAC,wBAAD,CAHQ;MAI5BF,aAAa,EAAEE,OAAO,CAAC,0BAAD,CAJM;MAK5BD,IAAI,EAAEA,IAAI,CAACA;IALiB,CAA9B;EAAA,CADkE,CAApE;;EAWA,MAAME,MAAM,GAAE,MAAI;IAChBN,QAAQ,CAACJ,eAAe,CAACN,IAAD,CAAhB,CAAR;IACAQ,QAAQ,CAAC,YAAD,CAAR;EACD,CAHD;;EAIA,MAAMS,QAAQ,GAAE,MAAI;IAClBP,QAAQ,CAACL,UAAU,CAACI,EAAD,CAAX,CAAR;EACD,CAFD;;EAGA,MAAMS,eAAe,GAAC,MAAI;IACxBV,QAAQ,CAAC,YAAD,CAAR;EACD,CAFD;;EAGA,MAAMW,MAAM,GAAEC,CAAD,IAAK;IAChBA,CAAC,CAACC,cAAF;IACAb,QAAQ,CAAC,CAAC,CAAF,CAAR;EACD,CAHD;;EAKA,oBAAO,QAAC,cAAD;IAAgB,IAAI,EAAEM,IAAtB;IAA4B,IAAI,EAAEd,IAAlC;IAAwC,WAAW,EAAEY,WAArD;IAAkE,aAAa,EAAEC,aAAjF;IAAgG,EAAE,EAAEJ,EAApG;IAAwG,MAAM,EAAEO,MAAhH;IAAwH,QAAQ,EAAEC,QAAlI;IACP,eAAe,EAAEC,eADV;IAC2B,MAAM,EAAGC;EADpC;IAAA;IAAA;IAAA;EAAA,QAAP;AAED,CApCD;;GAAMZ,uB;UAEaR,W,EAEFF,S,EACEF,W,EAGwCC,W;;;KARrDW,uB;AAsCN,eAAeA,uBAAf"},"metadata":{},"sourceType":"module"}