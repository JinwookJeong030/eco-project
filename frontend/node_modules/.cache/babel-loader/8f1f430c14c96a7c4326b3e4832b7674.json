{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport { takeLatest, call } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('user/CHECK');\nconst LOGOUT = 'user/LOGOUT';\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK, user => user);\nexport const logout = createAction(LOGOUT);\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user');\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(authAPI.logout);\n    localStorage.removeItem('user');\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\nconst initialState = {\n  user: {},\n  checkError: null\n};\nconst user = handleActions({\n  [TEMP_SET_USER]: (state, _ref) => {\n    let {\n      payload: user\n    } = _ref;\n    return { ...state,\n      user\n    };\n  },\n  [CHECK_SUCCESS]: (state, _ref2) => {\n    let {\n      payload: user\n    } = _ref2;\n    return { ...state,\n      user,\n      checkError: null\n    };\n  },\n  [CHECK_FAILURE]: (state, _ref3) => {\n    let {\n      payload: error\n    } = _ref3;\n    return { ...state,\n      user: null,\n      checkError: error\n    };\n  },\n  [LOGOUT]: state => ({ ...state,\n    user: null\n  })\n}, initialState);\nexport default user;","map":{"version":3,"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","takeLatest","call","authAPI","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","user","check","logout","checkSaga","checkFailureSaga","localStorage","removeItem","e","console","log","logoutSaga","userSaga","initialState","checkError","state","payload","error"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/modules/user.js"],"sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\n\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] =\r\n  createRequestActionTypes('user/CHECK');\r\n\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, (user) => user);\r\nexport const check = createAction(CHECK,(user)=>(user));\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n  try {\r\n    localStorage.removeItem('user');\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    localStorage.removeItem('user');\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\nconst initialState = {\r\n  user:{},\r\n  checkError: null,\r\n};\r\n\r\nconst user = handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({ ...state, user }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: (state) => ({ ...state, user: null }),\r\n  },\r\n  initialState,\r\n);\r\nexport default user;\r\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,oBAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AAEA,MAAMC,aAAa,GAAG,oBAAtB;AAEA,MAAM,CAACC,KAAD,EAAQC,aAAR,EAAuBC,aAAvB,IACJP,wBAAwB,CAAC,YAAD,CAD1B;AAGA,MAAMQ,MAAM,GAAG,aAAf;AAEA,OAAO,MAAMC,WAAW,GAAGZ,YAAY,CAACO,aAAD,EAAiBM,IAAD,IAAUA,IAA1B,CAAhC;AACP,OAAO,MAAMC,KAAK,GAAGd,YAAY,CAACQ,KAAD,EAAQK,IAAD,IAASA,IAAhB,CAA1B;AACP,OAAO,MAAME,MAAM,GAAGf,YAAY,CAACW,MAAD,CAA3B;AAEP,MAAMK,SAAS,GAAGd,iBAAiB,CAACM,KAAD,EAAQF,OAAO,CAACQ,KAAhB,CAAnC;;AAEA,SAASG,gBAAT,GAA4B;EAC1B,IAAI;IACFC,YAAY,CAACC,UAAb,CAAwB,MAAxB;EACD,CAFD,CAEE,OAAOC,CAAP,EAAU;IACVC,OAAO,CAACC,GAAR,CAAY,6BAAZ;EACD;AACF;;AAED,UAAUC,UAAV,GAAuB;EACrB,IAAI;IACF,MAAMlB,IAAI,CAACC,OAAO,CAACS,MAAT,CAAV;IACAG,YAAY,CAACC,UAAb,CAAwB,MAAxB;EACD,CAHD,CAGE,OAAOC,CAAP,EAAU;IACVC,OAAO,CAACC,GAAR,CAAYF,CAAZ;EACD;AACF;;AAED,OAAO,UAAUI,QAAV,GAAqB;EAC1B,MAAMpB,UAAU,CAACI,KAAD,EAAQQ,SAAR,CAAhB;EACA,MAAMZ,UAAU,CAACM,aAAD,EAAgBO,gBAAhB,CAAhB;EACA,MAAMb,UAAU,CAACO,MAAD,EAASY,UAAT,CAAhB;AACD;AACD,MAAME,YAAY,GAAG;EACnBZ,IAAI,EAAC,EADc;EAEnBa,UAAU,EAAE;AAFO,CAArB;AAKA,MAAMb,IAAI,GAAGZ,aAAa,CACxB;EACE,CAACM,aAAD,GAAiB,CAACoB,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEf;IAAX,CAAR;IAAA,OAA+B,EAAE,GAAGc,KAAL;MAAYd;IAAZ,CAA/B;EAAA,CADnB;EAEE,CAACJ,aAAD,GAAiB,CAACkB,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEf;IAAX,CAAR;IAAA,OAA+B,EAC9C,GAAGc,KAD2C;MAE9Cd,IAF8C;MAG9Ca,UAAU,EAAE;IAHkC,CAA/B;EAAA,CAFnB;EAOE,CAAChB,aAAD,GAAiB,CAACiB,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEC;IAAX,CAAR;IAAA,OAAgC,EAC/C,GAAGF,KAD4C;MAE/Cd,IAAI,EAAE,IAFyC;MAG/Ca,UAAU,EAAEG;IAHmC,CAAhC;EAAA,CAPnB;EAYE,CAAClB,MAAD,GAAWgB,KAAD,KAAY,EAAE,GAAGA,KAAL;IAAYd,IAAI,EAAE;EAAlB,CAAZ;AAZZ,CADwB,EAexBY,YAfwB,CAA1B;AAiBA,eAAeZ,IAAf"},"metadata":{},"sourceType":"module"}