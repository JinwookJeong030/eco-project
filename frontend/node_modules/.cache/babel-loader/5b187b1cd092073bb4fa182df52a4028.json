{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport createRequestSaga, { createRequestActionTypes } from \"../lib/createRequestSaga\";\nimport * as postsAPI from '../lib/api/post';\nimport { takeLatest } from 'redux-saga/effects';\nconst [LIST_POSTS, LIST_POSTS_SUCCESS, LIST_POSTS_FAILURE] = createRequestActionTypes('posts/LIST_POSTS');\nexport const listPosts = createAction(LIST_POSTS, _ref => {\n  let {\n    tag,\n    username,\n    page\n  } = _ref;\n  return {\n    tag,\n    username,\n    page\n  };\n});\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\nexport function* postsSaga() {\n  yield takeLatest(LIST_POSTS, listPostsSaga);\n}\nconst initialState = {\n  posts: null,\n  error: null\n};\nconst posts = handleActions({\n  [LIST_POSTS_SUCCESS]: (state, _ref2) => {\n    let {\n      payload: posts\n    } = _ref2;\n    return { ...state,\n      posts\n    };\n  },\n  [LIST_POSTS_FAILURE]: (state, _ref3) => {\n    let {\n      payload: error\n    } = _ref3;\n    return { ...state,\n      error\n    };\n  }\n}, initialState);\nexport default posts;","map":{"version":3,"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","postsAPI","takeLatest","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","tag","username","page","listPostsSaga","postsSaga","initialState","posts","error","state","payload"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/modules/posts.js"],"sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from \"../lib/createRequestSaga\";\r\nimport * as postsAPI from '../lib/api/post';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst [\r\n  LIST_POSTS,\r\n  LIST_POSTS_SUCCESS,\r\n  LIST_POSTS_FAILURE,\r\n] = createRequestActionTypes('posts/LIST_POSTS');\r\n\r\nexport const listPosts = createAction(\r\n  LIST_POSTS,\r\n  ({ tag, username, page }) => ({ tag, username, page }),\r\n);\r\n\r\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\r\nexport function* postsSaga() {\r\n  yield takeLatest(LIST_POSTS, listPostsSaga);\r\n}\r\n\r\nconst initialState = {\r\n  posts: null,\r\n  error: null,\r\n};\r\n\r\nconst posts = handleActions(\r\n  {\r\n    [LIST_POSTS_SUCCESS]: (state, { payload: posts }) => ({\r\n      ...state,\r\n      posts,\r\n    }),\r\n    [LIST_POSTS_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default posts;"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,QAAZ,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,MAAM,CACJC,UADI,EAEJC,kBAFI,EAGJC,kBAHI,IAIFL,wBAAwB,CAAC,kBAAD,CAJ5B;AAMA,OAAO,MAAMM,SAAS,GAAGT,YAAY,CACnCM,UADmC,EAEnC;EAAA,IAAC;IAAEI,GAAF;IAAOC,QAAP;IAAiBC;EAAjB,CAAD;EAAA,OAA8B;IAAEF,GAAF;IAAOC,QAAP;IAAiBC;EAAjB,CAA9B;AAAA,CAFmC,CAA9B;AAKP,MAAMC,aAAa,GAAGX,iBAAiB,CAACI,UAAD,EAAaF,QAAQ,CAACK,SAAtB,CAAvC;AACA,OAAO,UAAUK,SAAV,GAAsB;EAC3B,MAAMT,UAAU,CAACC,UAAD,EAAaO,aAAb,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;EACnBC,KAAK,EAAE,IADY;EAEnBC,KAAK,EAAE;AAFY,CAArB;AAKA,MAAMD,KAAK,GAAGf,aAAa,CACzB;EACE,CAACM,kBAAD,GAAsB,CAACW,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEH;IAAX,CAAR;IAAA,OAAgC,EACpD,GAAGE,KADiD;MAEpDF;IAFoD,CAAhC;EAAA,CADxB;EAKE,CAACR,kBAAD,GAAsB,CAACU,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEF;IAAX,CAAR;IAAA,OAAgC,EACpD,GAAGC,KADiD;MAEpDD;IAFoD,CAAhC;EAAA;AALxB,CADyB,EAWzBF,YAXyB,CAA3B;AAcA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}