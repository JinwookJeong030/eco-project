{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\containers\\\\post\\\\EditorContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport Editor from \"../../components/post/Editor\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeField, initialize, writePost, categorys, editPost } from \"../../modules/write\";\nimport { useNavigate } from \"../../../node_modules/react-router-dom/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    post_title,\n    post_contents,\n    post_category,\n    post_mission,\n    categoryArray,\n    categorysError,\n    missionArray,\n    missionsError,\n    originalPostId,\n    post,\n    postError\n  } = useSelector(_ref => {\n    let {\n      write\n    } = _ref;\n    return {\n      post_title: write.post_title,\n      post_contents: write.post_contents,\n      post_category: write.post_category,\n      post_mission: write.post_mission,\n      categoryArray: write.categorys,\n      categorysError: write.categorysError,\n      missionArray: write.missions,\n      missionsError: write.missionsError,\n      originalPostId: write.originalPostId,\n      post: write.post,\n      postError: write.postError\n    };\n  });\n\n  const onPublish = e => {\n    if (originalPostId) {\n      return dispatch(editPost({\n        post_id: originalPostId,\n        post_title,\n        post_contents,\n        post_category: 1,\n        post_mission\n      }));\n    }\n\n    e.preventDefault();\n    dispatch(writePost({\n      post_title,\n      post_contents,\n      post_category,\n      post_mission\n    }));\n  };\n\n  const onCancel = e => {\n    e.preventDefault();\n    navigate(-1);\n  };\n\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [dispatch]);\n  useEffect(() => {\n    return () => {\n      dispatch(initialize());\n    };\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(categorys());\n  }, []);\n  useEffect(() => {\n    if (post) {\n      navigate('/post/list');\n    }\n\n    if (postError) {\n      console.log(postError);\n    }\n  }, [navigate, post, postError]);\n  return /*#__PURE__*/_jsxDEV(Editor, {\n    categorys: categoryArray,\n    category: post_category,\n    missions: missionArray,\n    post_title: post_title,\n    post_contents: post_contents,\n    onChangeField: onChangeField,\n    onPublish: onPublish,\n    onCancel: onCancel\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EditorContainer, \"RkwLYo2PZVNuB85CSdfUgDhopAU=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = EditorContainer;\nexport default EditorContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorContainer\");","map":{"version":3,"names":["React","useEffect","useCallback","Editor","useSelector","useDispatch","changeField","initialize","writePost","categorys","editPost","useNavigate","EditorContainer","dispatch","navigate","post_title","post_contents","post_category","post_mission","categoryArray","categorysError","missionArray","missionsError","originalPostId","post","postError","write","missions","onPublish","e","post_id","preventDefault","onCancel","onChangeField","payload","console","log"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/containers/post/EditorContainer.js"],"sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport Editor from \"../../components/post/Editor\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeField, initialize, writePost, categorys, editPost } from \"../../modules/write\";\r\nimport { useNavigate } from \"../../../node_modules/react-router-dom/index\";\r\n\r\nconst EditorContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { post_title, post_contents,post_category, post_mission,categoryArray, categorysError, missionArray, missionsError,originalPostId, post, postError } = useSelector(({ write }) => ({\r\n    post_title: write.post_title,\r\n    post_contents: write.post_contents,\r\n    post_category: write.post_category,\r\n    post_mission: write.post_mission,\r\n    categoryArray: write.categorys,\r\n    categorysError: write.categorysError,\r\n    missionArray: write.missions,\r\n    missionsError: write.missionsError,\r\n    originalPostId: write.originalPostId,\r\n    post: write.post,\r\n    postError: write.postError,\r\n  }));\r\n  const onPublish = (e) => {\r\n    if(originalPostId){\r\n      return dispatch(editPost({post_id: originalPostId, post_title, post_contents, post_category:1, post_mission}));\r\n    }\r\n    e.preventDefault();\r\n    dispatch(writePost({post_title,post_contents,post_category, post_mission}));\r\n  };\r\n  const onCancel = (e) => {\r\n    e.preventDefault();\r\n    navigate(-1);\r\n  };\r\n\r\n  const onChangeField = \r\n  useCallback(payload => dispatch(changeField(payload)), \r\n  [dispatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(()=>{\r\n    dispatch(categorys());\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      navigate('/post/list');\r\n    }\r\n    if (postError) {\r\n      console.log(postError);\r\n    }\r\n  }, [navigate, post, postError]);  \r\n\r\n  return <Editor \r\n  categorys={categoryArray} \r\n  category={post_category} \r\n  missions={missionArray} \r\n  post_title={post_title}\r\n  post_contents={post_contents}\r\n  onChangeField={onChangeField} \r\n  onPublish={onPublish} \r\n  onCancel={onCancel}/>;\r\n};\r\n\r\nexport default EditorContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}