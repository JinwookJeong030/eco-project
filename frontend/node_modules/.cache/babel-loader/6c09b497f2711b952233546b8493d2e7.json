{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\containers\\\\post\\\\PostViewerContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { readPost, unloadPost } from \"../../modules/post\";\nimport PostViewer from \"../../components/post/PostViewer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostViewerContainer = () => {\n  _s();\n\n  // 처음 마운트될 때 포스트 읽기 API 요청\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const dispatch = useDispatch();\n  const {\n    post,\n    error,\n    loading\n  } = useSelector(_ref => {\n    let {\n      post,\n      loading\n    } = _ref;\n    return {\n      post: post.post,\n      error: post.error,\n      loading: loading['post/READ_POST']\n    };\n  });\n  useEffect(() => {\n    dispatch(readPost(id)); // 언마운트될 때 리덕스에서 포스트 데이터 없애기\n\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, id]);\n  return /*#__PURE__*/_jsxDEV(PostViewer, {\n    post: post,\n    loading: loading,\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PostViewerContainer, \"WPVwOQVC83lY5KI1osNApqlKJ0s=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = PostViewerContainer;\nexport default PostViewerContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostViewerContainer\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useParams","useLocation","useNavigate","readPost","unloadPost","PostViewer","PostViewerContainer","id","console","log","dispatch","post","error","loading"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/containers/post/PostViewerContainer.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useLocation, useNavigate  } from \"react-router-dom\";\r\nimport { readPost, unloadPost } from \"../../modules/post\";\r\nimport PostViewer from \"../../components/post/PostViewer\";\r\n\r\nconst PostViewerContainer = () => {\r\n\r\n  // 처음 마운트될 때 포스트 읽기 API 요청\r\n  const { id } = useParams();\r\n  console.log(id)\r\n  const dispatch = useDispatch();\r\n  const { post, error, loading } = useSelector(({ post, loading }) => ({\r\n    post: post.post,\r\n    error: post.error,\r\n    loading: loading['post/READ_POST'],\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(readPost(id));\r\n    // 언마운트될 때 리덕스에서 포스트 데이터 없애기\r\n    return () => {\r\n      dispatch(unloadPost());\r\n    };\r\n  }, [dispatch, id]);\r\n\r\n  return <PostViewer post={post} loading={loading} error={error} />;\r\n};\r\n\r\nexport default PostViewerContainer;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAqD,kBAArD;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EAEhC;EACA,MAAM;IAAEC;EAAF,IAASP,SAAS,EAAxB;EACAQ,OAAO,CAACC,GAAR,CAAYF,EAAZ;EACA,MAAMG,QAAQ,GAAGZ,WAAW,EAA5B;EACA,MAAM;IAAEa,IAAF;IAAQC,KAAR;IAAeC;EAAf,IAA2Bd,WAAW,CAAC;IAAA,IAAC;MAAEY,IAAF;MAAQE;IAAR,CAAD;IAAA,OAAwB;MACnEF,IAAI,EAAEA,IAAI,CAACA,IADwD;MAEnEC,KAAK,EAAED,IAAI,CAACC,KAFuD;MAGnEC,OAAO,EAAEA,OAAO,CAAC,gBAAD;IAHmD,CAAxB;EAAA,CAAD,CAA5C;EAMAhB,SAAS,CAAC,MAAM;IACda,QAAQ,CAACP,QAAQ,CAACI,EAAD,CAAT,CAAR,CADc,CAEd;;IACA,OAAO,MAAM;MACXG,QAAQ,CAACN,UAAU,EAAX,CAAR;IACD,CAFD;EAGD,CANQ,EAMN,CAACM,QAAD,EAAWH,EAAX,CANM,CAAT;EAQA,oBAAO,QAAC,UAAD;IAAY,IAAI,EAAEI,IAAlB;IAAwB,OAAO,EAAEE,OAAjC;IAA0C,KAAK,EAAED;EAAjD;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CArBD;;GAAMN,mB;UAGWN,S,EAEEF,W,EACgBC,W;;;KAN7BO,mB;AAuBN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}