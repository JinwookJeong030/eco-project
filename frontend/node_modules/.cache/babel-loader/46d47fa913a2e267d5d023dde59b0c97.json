{"ast":null,"code":"import axios from '../../../node_modules/axios/index';\nimport client from './client';\nconst JWT_EXPIRRY_TIME = 24 * 3600 * 1000;\nexport const login = _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  return client.get('/api/auth/login', {\n    params: {\n      email,\n      password\n    }\n  }).then(onLoginSuccess).catch(error => {});\n};\nexport const onSilentRefresh = () => {\n  axios.get('/api/auth/silent-refresh').then(onLoginSuccess).catch(error => {// ... 로그인 실패 처리\n  });\n};\n\nconst onLoginSuccess = response => {\n  const {\n    accessToken\n  } = response.data; // accessToken 설정\n\n  axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`; // accessToken 만료하기 1분 전에 로그인 연장\n\n  setTimeout(onSilentRefresh, JWT_EXPIRRY_TIME - 60000);\n};\n\nexport const register = _ref2 => {\n  let {\n    email,\n    password,\n    name\n  } = _ref2;\n  return client.post('/api/auth/register', {\n    email,\n    password,\n    name\n  }).then().catch();\n};\nexport const check = () => client.get('/api/auth/check');\nexport const logout = () => client.post('/api/auth/logout');","map":{"version":3,"names":["axios","client","JWT_EXPIRRY_TIME","login","email","password","get","params","then","onLoginSuccess","catch","error","onSilentRefresh","response","accessToken","data","defaults","headers","common","setTimeout","register","name","post","check","logout"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/lib/api/auth.js"],"sourcesContent":["import axios from '../../../node_modules/axios/index';\r\nimport client from './client';\r\n\r\nconst JWT_EXPIRRY_TIME = 24 * 3600 * 1000;\r\n\r\nexport const login = ({ email, password }) =>\r\n  client\r\n    .get('/api/auth/login', {params:{ email, password }})\r\n    .then(onLoginSuccess)\r\n    .catch((error) => {});\r\n\r\nexport const onSilentRefresh = () => {\r\n  axios\r\n    .get('/api/auth/silent-refresh')\r\n    .then(onLoginSuccess)\r\n    .catch((error) => {\r\n      // ... 로그인 실패 처리\r\n    });\r\n};\r\n\r\nconst onLoginSuccess = (response) => {\r\n  const { accessToken } = response.data;\r\n\r\n  // accessToken 설정\r\n  axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\r\n\r\n  // accessToken 만료하기 1분 전에 로그인 연장\r\n  setTimeout(onSilentRefresh, JWT_EXPIRRY_TIME - 60000);\r\n};\r\n\r\nexport const register = ({ email, password, name }) =>\r\n  client.post('/api/auth/register', { email, password, name }).then().catch();\r\n\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\nexport const logout = () => client.post('/api/auth/logout');\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,mCAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,gBAAgB,GAAG,KAAK,IAAL,GAAY,IAArC;AAEA,OAAO,MAAMC,KAAK,GAAG;EAAA,IAAC;IAAEC,KAAF;IAASC;EAAT,CAAD;EAAA,OACnBJ,MAAM,CACHK,GADH,CACO,iBADP,EAC0B;IAACC,MAAM,EAAC;MAAEH,KAAF;MAASC;IAAT;EAAR,CAD1B,EAEGG,IAFH,CAEQC,cAFR,EAGGC,KAHH,CAGUC,KAAD,IAAW,CAAE,CAHtB,CADmB;AAAA,CAAd;AAMP,OAAO,MAAMC,eAAe,GAAG,MAAM;EACnCZ,KAAK,CACFM,GADH,CACO,0BADP,EAEGE,IAFH,CAEQC,cAFR,EAGGC,KAHH,CAGUC,KAAD,IAAW,CAChB;EACD,CALH;AAMD,CAPM;;AASP,MAAMF,cAAc,GAAII,QAAD,IAAc;EACnC,MAAM;IAAEC;EAAF,IAAkBD,QAAQ,CAACE,IAAjC,CADmC,CAGnC;;EACAf,KAAK,CAACgB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAASJ,WAAY,EAAvE,CAJmC,CAMnC;;EACAK,UAAU,CAACP,eAAD,EAAkBV,gBAAgB,GAAG,KAArC,CAAV;AACD,CARD;;AAUA,OAAO,MAAMkB,QAAQ,GAAG;EAAA,IAAC;IAAEhB,KAAF;IAASC,QAAT;IAAmBgB;EAAnB,CAAD;EAAA,OACtBpB,MAAM,CAACqB,IAAP,CAAY,oBAAZ,EAAkC;IAAElB,KAAF;IAASC,QAAT;IAAmBgB;EAAnB,CAAlC,EAA6Db,IAA7D,GAAoEE,KAApE,EADsB;AAAA,CAAjB;AAGP,OAAO,MAAMa,KAAK,GAAG,MAAMtB,MAAM,CAACK,GAAP,CAAW,iBAAX,CAApB;AAEP,OAAO,MAAMkB,MAAM,GAAG,MAAMvB,MAAM,CAACqB,IAAP,CAAY,kBAAZ,CAArB"},"metadata":{},"sourceType":"module"}