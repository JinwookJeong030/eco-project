{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\components\\\\post\\\\ImageEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport ReactQuill from 'react-quill';\nimport './EditorQuill.css';\nimport Quill from \"quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport 'quill/dist/quill.bubble.css';\nimport Responsive from \"../common/Responsive\";\nimport styled from \"styled-components\";\nimport PostActionBtn from \"./PostActionBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditorBlock = styled(Responsive)`\n  /* 페이지 위아래 여백 지정 */\n  padding-top: 1rem;\n\n  border: solid thin;\n  \n  \n  @media (min-width: 1024px) {\n    width: 900px;\n  }\n  @media (max-width: 1050px) {\n    width: 90%;\n  \n  }\n  \n`;\n_c = EditorBlock;\n\nconst Images = _ref => {\n  let {\n    detailImages\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: detailImages.map(url => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: url,\n        src: url\n      }, url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c2 = Images;\n\nconst ImageEditor = () => {\n  _s();\n\n  const [postImages, setPostImages] = useState([]); // 서버로 보낼 이미지 데이터\n\n  const [detailImages, setDetailImages] = useState([]); // 프리뷰 보여줄 이미지 데이터\n\n  const uploadFile = event => {\n    let fileArr = event.target.files; //  사용자가 선택한 파일들\n\n    setPostImages(Array.from(fileArr)); //\n\n    let fileURLs = [];\n    let filesLength = fileArr.length > 10 ? 10 : fileArr.length; // 최대 10개\n    // 프리뷰\n\n    for (let i = 0; i < filesLength; i++) {\n      let file = fileArr[i];\n      let reader = new FileReader();\n\n      reader.onload = () => {\n        fileURLs[i] = reader.result;\n        setDetailImages([...fileURLs]);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(EditorBlock, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"upload-file\",\n      type: \"file\",\n      accept: \"image/*\",\n      multiple: true,\n      onChange: uploadFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Images, {\n      detailImages: detailImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 17\n  }, this);\n};\n\n_s(ImageEditor, \"AEElJrWedO2cmyNQxI6sxbtnsBs=\");\n\n_c3 = ImageEditor;\nexport default ImageEditor;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditorBlock\");\n$RefreshReg$(_c2, \"Images\");\n$RefreshReg$(_c3, \"ImageEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","ReactQuill","Quill","Responsive","styled","PostActionBtn","EditorBlock","Images","detailImages","map","url","ImageEditor","postImages","setPostImages","setDetailImages","uploadFile","event","fileArr","target","files","Array","from","fileURLs","filesLength","length","i","file","reader","FileReader","onload","result","readAsDataURL"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/components/post/ImageEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport ReactQuill from 'react-quill';\r\nimport './EditorQuill.css'\r\nimport Quill from \"quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport Responsive from \"../common/Responsive\";\r\nimport styled from \"styled-components\";\r\nimport PostActionBtn from \"./PostActionBtn\";\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  /* 페이지 위아래 여백 지정 */\r\n  padding-top: 1rem;\r\n\r\n  border: solid thin;\r\n  \r\n  \r\n  @media (min-width: 1024px) {\r\n    width: 900px;\r\n  }\r\n  @media (max-width: 1050px) {\r\n    width: 90%;\r\n  \r\n  }\r\n  \r\n`;\r\n\r\n\r\n\r\n\r\n\r\nconst Images = ({ detailImages }) => {\r\n    return (\r\n      <>\r\n        {detailImages.map((url) => {\r\n          return <img alt={url} key={url} src={url} />;\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\nconst ImageEditor =()=>{\r\n\r\n    const [postImages, setPostImages] = useState([]); // 서버로 보낼 이미지 데이터\r\n    const [detailImages, setDetailImages] = useState([]); // 프리뷰 보여줄 이미지 데이터\r\n\r\n    const uploadFile = (event) => {\r\n        let fileArr = event.target.files; //  사용자가 선택한 파일들\r\n        setPostImages(Array.from(fileArr)); //\r\n        let fileURLs = [];\r\n        let filesLength = fileArr.length > 10 ? 10 : fileArr.length; // 최대 10개\r\n    \r\n        // 프리뷰\r\n        for (let i = 0; i < filesLength; i++) {\r\n          let file = fileArr[i];\r\n          let reader = new FileReader();\r\n          reader.onload = () => {\r\n            fileURLs[i] = reader.result;\r\n            setDetailImages([...fileURLs]);\r\n          };\r\n          reader.readAsDataURL(file);\r\n        }\r\n      };\r\n\r\n        return( <EditorBlock>\r\n        \r\n           \r\n            <input id=\"upload-file\" type=\"file\" accept=\"image/*\" multiple onChange={uploadFile}></input>\r\n      <Images detailImages={detailImages} />\r\n       \r\n            </EditorBlock>\r\n\r\n        )\r\n    \r\n}\r\nexport default ImageEditor;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,iCAAP;AACA,OAAO,6BAAP;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACD,UAAD,CAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;KAAMG,W;;AAqBN,MAAMC,MAAM,GAAG,QAAsB;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACjC,oBACE;IAAA,UACGA,YAAY,CAACC,GAAb,CAAkBC,GAAD,IAAS;MACzB,oBAAO;QAAK,GAAG,EAAEA,GAAV;QAAyB,GAAG,EAAEA;MAA9B,GAAoBA,GAApB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFA;EADH,iBADF;AAOD,CARH;;MAAMH,M;;AAYN,MAAMI,WAAW,GAAE,MAAI;EAAA;;EAEnB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C,CAFmB,CAE+B;;EAClD,MAAM,CAACQ,YAAD,EAAeM,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD,CAHmB,CAGmC;;EAEtD,MAAMe,UAAU,GAAIC,KAAD,IAAW;IAC1B,IAAIC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B,CAD0B,CACQ;;IAClCN,aAAa,CAACO,KAAK,CAACC,IAAN,CAAWJ,OAAX,CAAD,CAAb,CAF0B,CAEU;;IACpC,IAAIK,QAAQ,GAAG,EAAf;IACA,IAAIC,WAAW,GAAGN,OAAO,CAACO,MAAR,GAAiB,EAAjB,GAAsB,EAAtB,GAA2BP,OAAO,CAACO,MAArD,CAJ0B,CAImC;IAE7D;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAApB,EAAiCE,CAAC,EAAlC,EAAsC;MACpC,IAAIC,IAAI,GAAGT,OAAO,CAACQ,CAAD,CAAlB;MACA,IAAIE,MAAM,GAAG,IAAIC,UAAJ,EAAb;;MACAD,MAAM,CAACE,MAAP,GAAgB,MAAM;QACpBP,QAAQ,CAACG,CAAD,CAAR,GAAcE,MAAM,CAACG,MAArB;QACAhB,eAAe,CAAC,CAAC,GAAGQ,QAAJ,CAAD,CAAf;MACD,CAHD;;MAIAK,MAAM,CAACI,aAAP,CAAqBL,IAArB;IACD;EACF,CAhBH;;EAkBI,oBAAQ,QAAC,WAAD;IAAA,wBAGJ;MAAO,EAAE,EAAC,aAAV;MAAwB,IAAI,EAAC,MAA7B;MAAoC,MAAM,EAAC,SAA3C;MAAqD,QAAQ,MAA7D;MAA8D,QAAQ,EAAEX;IAAxE;MAAA;MAAA;MAAA;IAAA,QAHI,eAIV,QAAC,MAAD;MAAQ,YAAY,EAAEP;IAAtB;MAAA;MAAA;MAAA;IAAA,QAJU;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AAUP,CAjCD;;GAAMG,W;;MAAAA,W;AAkCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}