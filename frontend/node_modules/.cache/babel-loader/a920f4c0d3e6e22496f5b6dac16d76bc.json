{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\containers\\\\post\\\\PostListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport qs from \"qs\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostList from \"../../components/post/PostList\";\nimport { changeField, listPosts } from \"../../modules/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostListContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const {\n    serach_type,\n    serach_contents,\n    posts,\n    error,\n    loading,\n    user\n  } = useSelector(_ref => {\n    let {\n      posts,\n      loading,\n      user\n    } = _ref;\n    return {\n      serach_type: posts.serach_type,\n      serach_contents: posts.serach_contents,\n      posts: posts.posts,\n      error: posts.error,\n      loading: loading['posts/LIST_POSTS'],\n      user: user.user\n    };\n  });\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [dispatch]);\n  const params = useParams();\n  useEffect(() => {\n    const {\n      username\n    } = params;\n    const {\n      page\n    } = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n    dispatch(listPosts({\n      username,\n      page\n    }));\n  }, [dispatch, location.search]);\n  return /*#__PURE__*/_jsxDEV(PostList, {\n    serach_type: serach_type,\n    serach_contents: serach_contents,\n    onChangeField: onChangeField,\n    loading: loading,\n    error: error,\n    posts: posts,\n    showWriteButton: user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostListContainer, \"fsBXdUZyJYrWAD5eCHGdg2tD1g8=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useParams];\n});\n\n_c = PostListContainer;\nexport default PostListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostListContainer\");","map":{"version":3,"names":["React","useEffect","useCallback","qs","useParams","useLocation","useDispatch","useSelector","PostList","changeField","listPosts","PostListContainer","dispatch","location","serach_type","serach_contents","posts","error","loading","user","onChangeField","payload","params","username","page","parse","search","ignoreQueryPrefix"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/containers/post/PostListContainer.js"],"sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport qs from \"qs\";\r\nimport { useParams,useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PostList from \"../../components/post/PostList\";\r\nimport { changeField, listPosts } from \"../../modules/posts\";\r\n\r\nconst PostListContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const { serach_type, serach_contents,posts, error, loading, user } = useSelector(\r\n    ({ posts, loading, user }) => ({\r\n      serach_type: posts.serach_type,\r\n      serach_contents: posts.serach_contents,\r\n      posts: posts.posts,\r\n      error: posts.error,\r\n      loading: loading['posts/LIST_POSTS'],\r\n      user: user.user,\r\n    }),\r\n  );\r\n\r\n  const onChangeField = \r\n  useCallback(payload => dispatch(changeField(payload)), \r\n  [dispatch]);\r\n\r\n\r\n  const params = useParams();\r\n  useEffect(() => {\r\n   \r\n    const { username } = params;\r\n    const { page } = qs.parse(location.search, {\r\n      ignoreQueryPrefix: true,\r\n    });\r\n    dispatch(listPosts({ username, page }));\r\n  }, [dispatch, location.search]);\r\n\r\n\r\n  return (\r\n    <PostList\r\n      serach_type={serach_type}\r\n      serach_contents={serach_contents}\r\n      onChangeField={onChangeField}\r\n      loading={loading}\r\n      error={error}\r\n      posts={posts}\r\n      showWriteButton={user}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PostListContainer;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,SAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,qBAAvC;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;EAAA;;EAC9B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,QAAQ,GAAGR,WAAW,EAA5B;EAEA,MAAM;IAAES,WAAF;IAAeC,eAAf;IAA+BC,KAA/B;IAAsCC,KAAtC;IAA6CC,OAA7C;IAAsDC;EAAtD,IAA+DZ,WAAW,CAC9E;IAAA,IAAC;MAAES,KAAF;MAASE,OAAT;MAAkBC;IAAlB,CAAD;IAAA,OAA+B;MAC7BL,WAAW,EAAEE,KAAK,CAACF,WADU;MAE7BC,eAAe,EAAEC,KAAK,CAACD,eAFM;MAG7BC,KAAK,EAAEA,KAAK,CAACA,KAHgB;MAI7BC,KAAK,EAAED,KAAK,CAACC,KAJgB;MAK7BC,OAAO,EAAEA,OAAO,CAAC,kBAAD,CALa;MAM7BC,IAAI,EAAEA,IAAI,CAACA;IANkB,CAA/B;EAAA,CAD8E,CAAhF;EAWA,MAAMC,aAAa,GACnBlB,WAAW,CAACmB,OAAO,IAAIT,QAAQ,CAACH,WAAW,CAACY,OAAD,CAAZ,CAApB,EACX,CAACT,QAAD,CADW,CADX;EAKA,MAAMU,MAAM,GAAGlB,SAAS,EAAxB;EACAH,SAAS,CAAC,MAAM;IAEd,MAAM;MAAEsB;IAAF,IAAeD,MAArB;IACA,MAAM;MAAEE;IAAF,IAAWrB,EAAE,CAACsB,KAAH,CAASZ,QAAQ,CAACa,MAAlB,EAA0B;MACzCC,iBAAiB,EAAE;IADsB,CAA1B,CAAjB;IAGAf,QAAQ,CAACF,SAAS,CAAC;MAAEa,QAAF;MAAYC;IAAZ,CAAD,CAAV,CAAR;EACD,CAPQ,EAON,CAACZ,QAAD,EAAWC,QAAQ,CAACa,MAApB,CAPM,CAAT;EAUA,oBACE,QAAC,QAAD;IACE,WAAW,EAAEZ,WADf;IAEE,eAAe,EAAEC,eAFnB;IAGE,aAAa,EAAEK,aAHjB;IAIE,OAAO,EAAEF,OAJX;IAKE,KAAK,EAAED,KALT;IAME,KAAK,EAAED,KANT;IAOE,eAAe,EAAEG;EAPnB;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA1CD;;GAAMR,iB;UACaL,W,EACAD,W,EAEoDE,W,EAgBtDH,S;;;KApBXO,iB;AA4CN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}