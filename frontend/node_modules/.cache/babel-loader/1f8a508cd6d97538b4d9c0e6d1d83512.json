{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\components\\\\post\\\\Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport ReactQuill from 'react-quill';\nimport Quill from \"quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport 'quill/dist/quill.bubble.css';\nimport Responsive from \"../common/ResponsiveHeader\";\nimport styled from \"styled-components\";\nimport PostActionBtn from \"./PostActionBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditorBlock = styled(Responsive)`\n  /* 페이지 위아래 여백 지정 */\n  padding-top: 5rem;\n  padding-bottom: 5rem;\n  border: solid thin;\n  \n  \n  @media (min-width: 1024px) {\n    width: 800px;\n  }\n  @media (max-width: 768px) {\n    width: 80%;\n  \n  }\n  \n`;\n_c = EditorBlock;\nconst TitleInput = styled.input`\n  outline: none;\n\n  font-size: 1.5rem;\n  padding-bottom: 0.5rem;\n  margin-bottom: 1rem;\n  width: 100%;\n  :focus{\n    border-color:#0982f0;\n    outline: none;}\n    :focus + label {\n      color: #0083cb;\n  }\n}\n`;\n_c2 = TitleInput;\nconst QuillWrapper = styled.div`\n  /* 최소 크기 지정 및 padding 제거 */\n  .ql-editor {\n    padding: 0;\n    min-height: 320px;\n    font-size: 1.125rem;\n    line-height: 1.5;\n  }\n  .ql-editor.ql-blank::before {\n    left: 0px;\n  }\n`;\n_c3 = QuillWrapper;\nconst EditBody = styled.div`\n  padding:2px;\n`;\n_c4 = EditBody;\n\nconst Editor = _ref => {\n  _s();\n\n  let {\n    title,\n    body,\n    onChangeField\n  } = _ref;\n  const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\n\n  const quillInstance = useRef(null);\n  useEffect(() => {\n    const modules = {\n      toolbar: [[{\n        'header': ['10pt', '8pt', 4, 3, 2, 1]\n      }], [{\n        'color': []\n      }, {\n        'background': []\n      }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n        'list': 'ordered'\n      }, {\n        'list': 'bullet'\n      }, {\n        'indent': '-1'\n      }, {\n        'indent': '+1'\n      }], ['link', 'image'], [{\n        'align': []\n      }, {\n        'color': []\n      }, {\n        'background': []\n      }], // dropdown with defaults from theme\n      ['clean']]\n    };\n    quillInstance.current = new Quill(quillElement.current, {\n      theme: 'snow',\n      placeholder: '내용을 작성하세요...',\n      modules\n    }); // quill에 text-change 이벤트 핸들러 등록\n    // 참고: https://quilljs.com/docs/api/#events\n\n    const quill = quillInstance.current;\n    quill.on('text-change', (delta, oldDelta, source) => {\n      if (source === 'user') {\n        onChangeField({\n          key: 'body',\n          value: quill.root.innerHTML\n        });\n      }\n    });\n  }, [onChangeField]);\n\n  const onChangeTitle = e => {\n    onChangeField({\n      key: 'title',\n      value: e.current.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(EditorBlock, {\n    children: [/*#__PURE__*/_jsxDEV(TitleInput, {\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      onChange: onChangeTitle,\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(QuillWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(EditBody, {\n        ref: quillElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostActionBtn, {\n        Styled: \"margin: 5rem;\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 17\n  }, this);\n};\n\n_s(Editor, \"6Cn/mTRP0NqVlGNpkx5D9B/BftI=\");\n\n_c5 = Editor;\nexport default Editor;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"EditorBlock\");\n$RefreshReg$(_c2, \"TitleInput\");\n$RefreshReg$(_c3, \"QuillWrapper\");\n$RefreshReg$(_c4, \"EditBody\");\n$RefreshReg$(_c5, \"Editor\");","map":{"version":3,"names":["React","useRef","useEffect","ReactQuill","Quill","Responsive","styled","PostActionBtn","EditorBlock","TitleInput","input","QuillWrapper","div","EditBody","Editor","title","body","onChangeField","quillElement","quillInstance","modules","toolbar","current","theme","placeholder","quill","on","delta","oldDelta","source","key","value","root","innerHTML","onChangeTitle","e"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/components/post/Editor.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport ReactQuill from 'react-quill';\r\nimport Quill from \"quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport Responsive from \"../common/ResponsiveHeader\";\r\nimport styled from \"styled-components\";\r\nimport PostActionBtn from \"./PostActionBtn\";\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  /* 페이지 위아래 여백 지정 */\r\n  padding-top: 5rem;\r\n  padding-bottom: 5rem;\r\n  border: solid thin;\r\n  \r\n  \r\n  @media (min-width: 1024px) {\r\n    width: 800px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  \r\n  }\r\n  \r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  outline: none;\r\n\r\n  font-size: 1.5rem;\r\n  padding-bottom: 0.5rem;\r\n  margin-bottom: 1rem;\r\n  width: 100%;\r\n  :focus{\r\n    border-color:#0982f0;\r\n    outline: none;}\r\n    :focus + label {\r\n      color: #0083cb;\r\n  }\r\n}\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  /* 최소 크기 지정 및 padding 제거 */\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 320px;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    left: 0px;\r\n  }\r\n`;\r\nconst EditBody = styled.div`\r\n  padding:2px;\r\n`\r\n\r\n\r\nconst Editor =({title, body, onChangeField })=>{\r\n  const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\r\n  const quillInstance =  useRef(null); \r\n\r\n \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n  const modules = {\r\n    toolbar: [\r\n    \r\n      [{ 'header': ['10pt','8pt',4,3,2,1] }],\r\n      [{ 'color': [] }, { 'background': [] }],\r\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n      ['link', 'image'],\r\n      [{ 'align': [] }, { 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n      ['clean']\r\n    ],\r\n  }\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'snow',\r\n      placeholder: '내용을 작성하세요...',\r\n      modules,\r\n    });\r\n\r\n    // quill에 text-change 이벤트 핸들러 등록\r\n    // 참고: https://quilljs.com/docs/api/#events\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  const onChangeTitle = e => {\r\n    onChangeField({ key: 'title', value: e.current.value });\r\n  };\r\n        return( <EditorBlock>\r\n          <TitleInput \r\n            placeholder=\"제목을 입력하세요.\" \r\n            onChange={onChangeTitle} \r\n            value={title}\r\n          />\r\n            <QuillWrapper>\r\n                <EditBody \r\n                   ref={quillElement}  />\r\n            \r\n              <PostActionBtn Styled='margin: 5rem;'/>\r\n            </QuillWrapper>\r\n            </EditorBlock>\r\n\r\n        )\r\n    \r\n}\r\nexport default Editor;"],"mappings":"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"},"metadata":{},"sourceType":"module"}