{"ast":null,"code":"import axios from '../../../node_modules/axios/index';\nimport client from './client';\nconst JWT_EXPIRRY_TIME = 24 * 3600 * 1000;\nexport const login = _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  return client.post('/auth/login', {\n    email,\n    password\n  }).then(response => {\n    onLoginSuccess(response);\n    return response;\n  }).catch(error => {// ... 로그인 실패 처리\n  });\n};\nexport const onRefresh = () => {\n  axios.get('/auth/refresh').then(response => {\n    onLoginSuccess(response);\n    return response;\n  }).catch(error => {// ... 로그인 실패 처리\n  });\n};\n\nconst onLoginSuccess = response => {\n  const {\n    accessToken\n  } = JSON.stringify(response.data.data.accessToken);\n  console.log(accessToken); // accessToken 설정\n\n  axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`; // accessToken 만료하기 1분 전에 로그인 연장\n\n  setTimeout(onRefresh, JWT_EXPIRRY_TIME - 60000);\n};\n\nexport const register = _ref2 => {\n  let {\n    email,\n    password,\n    name\n  } = _ref2;\n  return client.post('/auth/register', {\n    email,\n    password,\n    name\n  }).then().catch();\n};\nexport const check = () => client.get('/auth/check');\nexport const logout = () => client.post('/auth/logout');","map":{"version":3,"names":["axios","client","JWT_EXPIRRY_TIME","login","email","password","post","then","response","onLoginSuccess","catch","error","onRefresh","get","accessToken","JSON","stringify","data","console","log","defaults","headers","common","setTimeout","register","name","check","logout"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/lib/api/auth.js"],"sourcesContent":["import axios from '../../../node_modules/axios/index';\r\nimport client from './client';\r\n\r\nconst JWT_EXPIRRY_TIME = 24 * 3600 * 1000;\r\n\r\nexport const login = ({ email, password }) =>\r\n  client\r\n    .post('/auth/login', { email, password }).then(response=>{\r\n      \r\n  onLoginSuccess(response);\r\nreturn response;})\r\n.catch((error) => {\r\n  // ... 로그인 실패 처리\r\n});\r\n\r\nexport const onRefresh = () => {\r\n  axios\r\n    .get('/auth/refresh')\r\n    .then(response=>{\r\n      onLoginSuccess(response);\r\n      \r\n    return response;})\r\n    .catch((error) => {\r\n      // ... 로그인 실패 처리\r\n    });\r\n};\r\n\r\nconst onLoginSuccess = (response) => {\r\n\r\n  const { accessToken } = JSON.stringify(response.data.data.accessToken);\r\n  console.log(accessToken);\r\n  // accessToken 설정\r\n  axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\r\n\r\n  // accessToken 만료하기 1분 전에 로그인 연장\r\n  setTimeout(onRefresh, JWT_EXPIRRY_TIME - 60000);\r\n};\r\n\r\nexport const register = ({ email, password, name }) =>\r\n  client.post('/auth/register', { email, password, name }).then().catch();\r\n\r\nexport const check = () => client.get('/auth/check');\r\n\r\nexport const logout = () => client.post('/auth/logout');\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,mCAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,gBAAgB,GAAG,KAAK,IAAL,GAAY,IAArC;AAEA,OAAO,MAAMC,KAAK,GAAG;EAAA,IAAC;IAAEC,KAAF;IAASC;EAAT,CAAD;EAAA,OACnBJ,MAAM,CACHK,IADH,CACQ,aADR,EACuB;IAAEF,KAAF;IAASC;EAAT,CADvB,EAC4CE,IAD5C,CACiDC,QAAQ,IAAE;IAE3DC,cAAc,CAACD,QAAD,CAAd;IACF,OAAOA,QAAP;EAAiB,CAJf,EAKDE,KALC,CAKMC,KAAD,IAAW,CAChB;EACD,CAPC,CADmB;AAAA,CAAd;AAUP,OAAO,MAAMC,SAAS,GAAG,MAAM;EAC7BZ,KAAK,CACFa,GADH,CACO,eADP,EAEGN,IAFH,CAEQC,QAAQ,IAAE;IACdC,cAAc,CAACD,QAAD,CAAd;IAEF,OAAOA,QAAP;EAAiB,CALnB,EAMGE,KANH,CAMUC,KAAD,IAAW,CAChB;EACD,CARH;AASD,CAVM;;AAYP,MAAMF,cAAc,GAAID,QAAD,IAAc;EAEnC,MAAM;IAAEM;EAAF,IAAkBC,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACS,IAAT,CAAcA,IAAd,CAAmBH,WAAlC,CAAxB;EACAI,OAAO,CAACC,GAAR,CAAYL,WAAZ,EAHmC,CAInC;;EACAd,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAASR,WAAY,EAAvE,CALmC,CAOnC;;EACAS,UAAU,CAACX,SAAD,EAAYV,gBAAgB,GAAG,KAA/B,CAAV;AACD,CATD;;AAWA,OAAO,MAAMsB,QAAQ,GAAG;EAAA,IAAC;IAAEpB,KAAF;IAASC,QAAT;IAAmBoB;EAAnB,CAAD;EAAA,OACtBxB,MAAM,CAACK,IAAP,CAAY,gBAAZ,EAA8B;IAAEF,KAAF;IAASC,QAAT;IAAmBoB;EAAnB,CAA9B,EAAyDlB,IAAzD,GAAgEG,KAAhE,EADsB;AAAA,CAAjB;AAGP,OAAO,MAAMgB,KAAK,GAAG,MAAMzB,MAAM,CAACY,GAAP,CAAW,aAAX,CAApB;AAEP,OAAO,MAAMc,MAAM,GAAG,MAAM1B,MAAM,CAACK,IAAP,CAAY,cAAZ,CAArB"},"metadata":{},"sourceType":"module"}