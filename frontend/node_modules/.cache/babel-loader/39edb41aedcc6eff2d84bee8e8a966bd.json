{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport { takeLatest } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('user/CHECK');\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n}\nconst initialState = {\n  user: null,\n  checkError: null\n};\nconst user = handleActions({\n  [TEMP_SET_USER]: (state, _ref) => {\n    let {\n      payload: user\n    } = _ref;\n    return { ...state,\n      user\n    };\n  },\n  [CHECK_SUCCESS]: (state, _ref2) => {\n    let {\n      payload: user\n    } = _ref2;\n    return { ...state,\n      user,\n      checkError: null\n    };\n  },\n  [CHECK_FAILURE]: (state, _ref3) => {\n    let {\n      payload: error\n    } = _ref3;\n    return { ...state,\n      user: null,\n      checkError: error\n    };\n  },\n  initialState\n});\nexport default user;","map":{"version":3,"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","takeLatest","authAPI","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","tempSetUser","user","check","checkSaga","userSaga","initialState","checkError","state","payload","error"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/modules/user.js"],"sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\n\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] =\r\n  createRequestActionTypes('user/CHECK');\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, (user) => user);\r\nexport const check = createAction(CHECK);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n}\r\n\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n};\r\n\r\nconst user = handleActions({\r\n  [TEMP_SET_USER]: (state, { payload: user }) => ({ ...state, user }),\r\n  [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n    ...state,\r\n    user,\r\n    checkError: null,\r\n  }),\r\n  [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n    ...state,\r\n    user: null,\r\n    checkError: error,\r\n  }),\r\n  initialState,\r\n});\r\nexport default user;\r\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AAEA,MAAMC,aAAa,GAAG,oBAAtB;AAEA,MAAM,CAACC,KAAD,EAAQC,aAAR,EAAuBC,aAAvB,IACJN,wBAAwB,CAAC,YAAD,CAD1B;AAGA,OAAO,MAAMO,WAAW,GAAGV,YAAY,CAACM,aAAD,EAAiBK,IAAD,IAAUA,IAA1B,CAAhC;AACP,OAAO,MAAMC,KAAK,GAAGZ,YAAY,CAACO,KAAD,CAA1B;AAEP,MAAMM,SAAS,GAAGX,iBAAiB,CAACK,KAAD,EAAQF,OAAO,CAACO,KAAhB,CAAnC;AACA,OAAO,UAAUE,QAAV,GAAqB;EAC1B,MAAMV,UAAU,CAACG,KAAD,EAAQM,SAAR,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;EACnBJ,IAAI,EAAE,IADa;EAEnBK,UAAU,EAAE;AAFO,CAArB;AAKA,MAAML,IAAI,GAAGV,aAAa,CAAC;EACzB,CAACK,aAAD,GAAiB,CAACW,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEP;IAAX,CAAR;IAAA,OAA+B,EAAE,GAAGM,KAAL;MAAYN;IAAZ,CAA/B;EAAA,CADQ;EAEzB,CAACH,aAAD,GAAiB,CAACS,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEP;IAAX,CAAR;IAAA,OAA+B,EAC9C,GAAGM,KAD2C;MAE9CN,IAF8C;MAG9CK,UAAU,EAAE;IAHkC,CAA/B;EAAA,CAFQ;EAOzB,CAACP,aAAD,GAAiB,CAACQ,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEC;IAAX,CAAR;IAAA,OAAgC,EAC/C,GAAGF,KAD4C;MAE/CN,IAAI,EAAE,IAFyC;MAG/CK,UAAU,EAAEG;IAHmC,CAAhC;EAAA,CAPQ;EAYzBJ;AAZyB,CAAD,CAA1B;AAcA,eAAeJ,IAAf"},"metadata":{},"sourceType":"module"}