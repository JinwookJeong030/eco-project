{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Capstone\\\\eco-project\\\\frontend\\\\src\\\\containers\\\\post\\\\ReplyListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport qs from \"qs\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReplyList from \"../../components/post/ReplyList\";\nimport { changeField, listReplys, unloadReplys, writeReply } from \"../../modules/replys\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReplyListContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const {\n    user\n  } = useSelector(_ref => {\n    let {\n      user\n    } = _ref;\n    return {\n      user: user.user\n    };\n  });\n  const {\n    addIndex,\n    addReplyState,\n    reply_post,\n    reply_contents,\n    reply_order,\n    reply_type,\n    reply_group_id,\n    replys,\n    replysError,\n    loading\n  } = useSelector(_ref2 => {\n    let {\n      replys,\n      loading\n    } = _ref2;\n    return {\n      addIndex: replys.addIndex,\n      addReplyState: replys.addReplyState,\n      reply_post: id,\n      reply_contents: replys.reply_add_contents,\n      reply_type: 1,\n      reply_order: replys.reply_order,\n      reply_group_id: replys.addReplyState,\n      replys: replys.replys,\n      replysError: replys.replysError,\n      loading: loading['replys/LIST_REPLYS']\n    };\n  });\n\n  const onPublish = e => {\n    dispatch(writeReply({\n      reply_post,\n      reply_contents,\n      reply_type,\n      reply_order,\n      reply_group_id\n    }));\n  };\n\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [dispatch]);\n  useEffect(() => {\n    dispatch(listReplys(id)); // 언마운트될 때 리덕스에서 포스트 데이터 없애기\n\n    return () => {\n      dispatch(unloadReplys());\n    };\n  }, [dispatch, id]);\n  return /*#__PURE__*/_jsxDEV(ReplyList, {\n    user: user,\n    loading: loading,\n    error: replysError,\n    addIndex: addIndex,\n    addReplyState: addReplyState,\n    replys: replys,\n    onChangeField: onChangeField,\n    onPublish: onPublish\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReplyListContainer, \"hngd1oEQAYP2QW4oJJk8yJiWZCc=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector];\n});\n\n_c = ReplyListContainer;\nexport default ReplyListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReplyListContainer\");","map":{"version":3,"names":["React","useEffect","useCallback","qs","useParams","useDispatch","useSelector","ReplyList","changeField","listReplys","unloadReplys","writeReply","ReplyListContainer","dispatch","id","user","addIndex","addReplyState","reply_post","reply_contents","reply_order","reply_type","reply_group_id","replys","replysError","loading","reply_add_contents","onPublish","e","onChangeField","payload"],"sources":["D:/GitHub/Capstone/eco-project/frontend/src/containers/post/ReplyListContainer.js"],"sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport qs from \"qs\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReplyList from \"../../components/post/ReplyList\";\r\nimport { changeField, listReplys, unloadReplys, writeReply } from \"../../modules/replys\";\r\n\r\nconst ReplyListContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  const {user}= useSelector(({user})=>({user: user.user}));\r\n  const {addIndex,addReplyState, reply_post,reply_contents,reply_order,reply_type,reply_group_id,replys, replysError, loading } = useSelector(\r\n    ({ replys, loading }) => ({\r\n      addIndex: replys.addIndex,\r\n      addReplyState: replys.addReplyState,\r\n      reply_post: id,\r\n      reply_contents: replys.reply_add_contents,\r\n      reply_type: 1,\r\n      reply_order:replys.reply_order,\r\n      reply_group_id: replys.addReplyState,\r\n      replys: replys.replys,\r\n      replysError: replys.replysError,\r\n      loading: loading['replys/LIST_REPLYS'],\r\n    }),\r\n  );\r\n  \r\n  const onPublish = (e) => {\r\n    dispatch(writeReply({reply_post, reply_contents,reply_type,reply_order, reply_group_id}));\r\n   \r\n  };\r\n\r\n\r\n  const onChangeField = \r\n  useCallback(payload => dispatch(changeField(payload)), \r\n  [dispatch]);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listReplys(id));\r\n\r\n    // 언마운트될 때 리덕스에서 포스트 데이터 없애기\r\n    return () => {\r\n      dispatch(unloadReplys());\r\n    };\r\n  }, [dispatch, id,]);\r\n  return (\r\n    <ReplyList\r\n      user={user}\r\n      loading={loading}\r\n      error={replysError}\r\n      addIndex={addIndex}\r\n      addReplyState={addReplyState}\r\n      replys={replys}\r\n      onChangeField={onChangeField}\r\n      onPublish={onPublish}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReplyListContainer;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,YAAlC,EAAgDC,UAAhD,QAAkE,sBAAlE;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;EAAA;;EAC/B,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAM;IAAES;EAAF,IAASV,SAAS,EAAxB;EAEA,MAAM;IAACW;EAAD,IAAQT,WAAW,CAAC;IAAA,IAAC;MAACS;IAAD,CAAD;IAAA,OAAW;MAACA,IAAI,EAAEA,IAAI,CAACA;IAAZ,CAAX;EAAA,CAAD,CAAzB;EACA,MAAM;IAACC,QAAD;IAAUC,aAAV;IAAyBC,UAAzB;IAAoCC,cAApC;IAAmDC,WAAnD;IAA+DC,UAA/D;IAA0EC,cAA1E;IAAyFC,MAAzF;IAAiGC,WAAjG;IAA8GC;EAA9G,IAA0HnB,WAAW,CACzI;IAAA,IAAC;MAAEiB,MAAF;MAAUE;IAAV,CAAD;IAAA,OAA0B;MACxBT,QAAQ,EAAEO,MAAM,CAACP,QADO;MAExBC,aAAa,EAAEM,MAAM,CAACN,aAFE;MAGxBC,UAAU,EAAEJ,EAHY;MAIxBK,cAAc,EAAEI,MAAM,CAACG,kBAJC;MAKxBL,UAAU,EAAE,CALY;MAMxBD,WAAW,EAACG,MAAM,CAACH,WANK;MAOxBE,cAAc,EAAEC,MAAM,CAACN,aAPC;MAQxBM,MAAM,EAAEA,MAAM,CAACA,MARS;MASxBC,WAAW,EAAED,MAAM,CAACC,WATI;MAUxBC,OAAO,EAAEA,OAAO,CAAC,oBAAD;IAVQ,CAA1B;EAAA,CADyI,CAA3I;;EAeA,MAAME,SAAS,GAAIC,CAAD,IAAO;IACvBf,QAAQ,CAACF,UAAU,CAAC;MAACO,UAAD;MAAaC,cAAb;MAA4BE,UAA5B;MAAuCD,WAAvC;MAAoDE;IAApD,CAAD,CAAX,CAAR;EAED,CAHD;;EAMA,MAAMO,aAAa,GACnB3B,WAAW,CAAC4B,OAAO,IAAIjB,QAAQ,CAACL,WAAW,CAACsB,OAAD,CAAZ,CAApB,EACX,CAACjB,QAAD,CADW,CADX;EAKAZ,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACJ,UAAU,CAACK,EAAD,CAAX,CAAR,CADc,CAGd;;IACA,OAAO,MAAM;MACXD,QAAQ,CAACH,YAAY,EAAb,CAAR;IACD,CAFD;EAGD,CAPQ,EAON,CAACG,QAAD,EAAWC,EAAX,CAPM,CAAT;EAQA,oBACE,QAAC,SAAD;IACE,IAAI,EAAEC,IADR;IAEE,OAAO,EAAEU,OAFX;IAGE,KAAK,EAAED,WAHT;IAIE,QAAQ,EAAER,QAJZ;IAKE,aAAa,EAAEC,aALjB;IAME,MAAM,EAAEM,MANV;IAOE,aAAa,EAAEM,aAPjB;IAQE,SAAS,EAAEF;EARb;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAnDD;;GAAMf,kB;UACaP,W,EACFD,S,EAEDE,W,EACkHA,W;;;KAL5HM,kB;AAqDN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}